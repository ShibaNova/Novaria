{
  "contractName": "NovaToken",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BURN_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "burnSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sNova",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sNova",
          "type": "address"
        }
      ],
      "name": "setupSNova",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURN_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sNova\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sNova\",\"type\":\"address\"}],\"name\":\"setupSNova\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"burnSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"mint(address,uint256)\":{\"notice\":\"Creates `_amount` token to `_to`. Must only be called by the owner (MasterShiba).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/D/Novaria/contracts/NovaToken.sol\":\"NovaToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/Novaria/contracts/NovaToken.sol\":{\"keccak256\":\"0xfe93f46479e773f4540f024a7c634ac9858b62a1a23053542f497ae4ab3a7f12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f03872af7145c25ff61bc2e07d5e41a67a79f258d699c8de9791b8b6763a5220\",\"dweb:/ipfs/QmfWuzx764Jj7E3NKtpeAM1kpoqof9fjrNPYPSY62eguyi\"]},\"/D/Novaria/contracts/interfaces/IBEP20.sol\":{\"keccak256\":\"0x06827c4a144efe4b7f4eebe7cc9b3cec72ab103f0b3bc8ed2b17b7eacb8b8305\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2d0a9616491ec4dd28a23491a156731d9c719edc3d78022e534c7ecd9bf51b6e\",\"dweb:/ipfs/QmTimAYxJtMyQkYWM41V85YvSuGXNiNiQCnqauN5gRxG9W\"]},\"/D/Novaria/contracts/libs/ShibaBEP20.sol\":{\"keccak256\":\"0xdbbcbf68562c3d2e01ad847c619d650da247ab4f670dc8b85029d5a7618becd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310352c2b4d2bee8c1edf0a4a8e94c7d7430bb246478376c7b74d2899aee1da9\",\"dweb:/ipfs/QmZb9vXsFbvP7vy2WnGpKSVT6EsqH4KohRTy3DhPrnD7yV\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a57d0854b2fdce6ebff933a48dca2445643d1eccfc27f00292e937f26c6a58\",\"dweb:/ipfs/QmW45rZooS9TqR4YXUbjRbtf2Bpb5ouSarBvfW1LdGprvV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280600a815260200169029b434b130a727ab20960b51b815250604051806040016040528060048152602001634e4f564160e01b8152506200006c62000066620000ad60201b60201c565b620000b1565b81516200008190600590602085019062000101565b5080516200009790600690602084019062000101565b50506007805460ff1916601217905550620001e4565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546200010f90620001a7565b90600052602060002090601f0160209004810192826200013357600085556200017e565b82601f106200014e57805160ff19168380011785556200017e565b828001600101855582156200017e579182015b828111156200017e57825182559160200191906001019062000161565b506200018c92915062000190565b5090565b5b808211156200018c576000815560010162000191565b600181811c90821680620001bc57607f821691505b60208210811415620001de57634e487b7160e01b600052602260045260246000fd5b50919050565b610f8f80620001f46000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063893d20e8116100b8578063a457c2d71161007c578063a457c2d71461027f578063a9059cbb14610292578063b03e6478146102a5578063dd62ed3e146102ad578063f2fde38b146102e6578063fccc2813146102f957600080fd5b8063893d20e8146102405780638da5cb5b146102405780638f32d59b1461025157806395d89b41146102645780639dfd5f051461026c57600080fd5b8063313ce567116100ff578063313ce567146101d257806339509351146101e757806340c10f19146101fa57806370a082311461020f578063715018a61461023857600080fd5b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461017d57806323b872dd1461018f5780632ce39db1146101a2575b600080fd5b610144610302565b6040516101519190610d79565b60405180910390f35b61016d610168366004610d4f565b610394565b6040519015158152602001610151565b6003545b604051908152602001610151565b61016d61019d366004610d13565b6103aa565b6007546101ba9061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610151565b60075460405160ff9091168152602001610151565b61016d6101f5366004610d4f565b610413565b61020d610208366004610d4f565b610449565b005b61018161021d366004610cc5565b6001600160a01b031660009081526001602052604090205490565b61020d6104d0565b6000546001600160a01b03166101ba565b6000546001600160a01b0316331461016d565b610144610506565b61020d61027a366004610cc5565b610515565b61016d61028d366004610d4f565b610567565b61016d6102a0366004610d4f565b6105b6565b600454610181565b6101816102bb366004610ce0565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61020d6102f4366004610cc5565b6105c3565b6101ba61dead81565b60606005805461031190610e73565b80601f016020809104026020016040519081016040528092919081815260200182805461033d90610e73565b801561038a5780601f1061035f5761010080835404028352916020019161038a565b820191906000526020600020905b81548152906001019060200180831161036d57829003601f168201915b5050505050905090565b60006103a133848461065e565b50600192915050565b60006103b7848484610783565b610409843361040485604051806060016040528060288152602001610ec5602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610888565b61065e565b5060019392505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916103a191859061040490866108b4565b6000546001600160a01b0316331480610471575060075461010090046001600160a01b031633145b6104c25760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206973206e6f7420746865206f776e6572206f7220734e6f766160448201526064015b60405180910390fd5b6104cc82826108c7565b5050565b6000546001600160a01b031633146104fa5760405162461bcd60e51b81526004016104b990610dce565b61050460006109ad565b565b60606006805461031190610e73565b6000546001600160a01b0316331461053f5760405162461bcd60e51b81526004016104b990610dce565b600780546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b60006103a1338461040485604051806060016040528060258152602001610f13602591393360009081526002602090815260408083206001600160a01b038d1684529091529020549190610888565b60006103a1338484610783565b6000546001600160a01b031633146105ed5760405162461bcd60e51b81526004016104b990610dce565b6001600160a01b0381166106525760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104b9565b61065b816109ad565b50565b6001600160a01b0383166106c05760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104b9565b6001600160a01b0382166107215760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104b9565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600081116107be5760405162461bcd60e51b81526020600482015260086024820152670616d6f756e7420360c41b60448201526064016104b9565b6001600160a01b03821661dead14156107e0576107db83826109fd565b505050565b600060646107ef836002610e3d565b6107f99190610e1b565b905060006108078284610e5c565b90506108138282610e03565b831461086c5760405162461bcd60e51b815260206004820152602260248201527f4e6f76613a3a7472616e736665723a204275726e2076616c756520696e76616c6044820152611a5960f21b60648201526084016104b9565b61087685836109fd565b610881858583610b17565b5050505050565b600081848411156108ac5760405162461bcd60e51b81526004016104b99190610d79565b505050900390565b60006108c08284610e03565b9392505050565b6001600160a01b03821661091d5760405162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104b9565b60035461092a90826108b4565b6003556001600160a01b03821660009081526001602052604090205461095090826108b4565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906109a19085815260200190565b60405180910390a35050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03821661dead1415610a625760405162461bcd60e51b815260206004820152602160248201527f42455032303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104b9565b610a9f81604051806060016040528060228152602001610f38602291396001600160a01b0385166000908152600160205260409020549190610888565b6001600160a01b038316600090815260016020526040902055600354610ac59082610c9d565b600355600454610ad590826108b4565b60045560405181815261dead906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016109a1565b6001600160a01b038316610b7b5760405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104b9565b6001600160a01b038216610bdd5760405162461bcd60e51b815260206004820152602360248201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104b9565b610c1a81604051806060016040528060268152602001610eed602691396001600160a01b0386166000908152600160205260409020549190610888565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610c4990826108b4565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107769085815260200190565b60006108c08284610e5c565b80356001600160a01b0381168114610cc057600080fd5b919050565b600060208284031215610cd757600080fd5b6108c082610ca9565b60008060408385031215610cf357600080fd5b610cfc83610ca9565b9150610d0a60208401610ca9565b90509250929050565b600080600060608486031215610d2857600080fd5b610d3184610ca9565b9250610d3f60208501610ca9565b9150604084013590509250925092565b60008060408385031215610d6257600080fd5b610d6b83610ca9565b946020939093013593505050565b600060208083528351808285015260005b81811015610da657858101830151858201604001528201610d8a565b81811115610db8576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610e1657610e16610eae565b500190565b600082610e3857634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610e5757610e57610eae565b500290565b600082821015610e6e57610e6e610eae565b500390565b600181811c90821680610e8757607f821691505b60208210811415610ea857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365a264697066735822122067c9e47725f57bf67d545a2f51cc1b8282851e464cfdb31a0f9faf5058eba95c64736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c8063893d20e8116100b8578063a457c2d71161007c578063a457c2d71461027f578063a9059cbb14610292578063b03e6478146102a5578063dd62ed3e146102ad578063f2fde38b146102e6578063fccc2813146102f957600080fd5b8063893d20e8146102405780638da5cb5b146102405780638f32d59b1461025157806395d89b41146102645780639dfd5f051461026c57600080fd5b8063313ce567116100ff578063313ce567146101d257806339509351146101e757806340c10f19146101fa57806370a082311461020f578063715018a61461023857600080fd5b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461017d57806323b872dd1461018f5780632ce39db1146101a2575b600080fd5b610144610302565b6040516101519190610d79565b60405180910390f35b61016d610168366004610d4f565b610394565b6040519015158152602001610151565b6003545b604051908152602001610151565b61016d61019d366004610d13565b6103aa565b6007546101ba9061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610151565b60075460405160ff9091168152602001610151565b61016d6101f5366004610d4f565b610413565b61020d610208366004610d4f565b610449565b005b61018161021d366004610cc5565b6001600160a01b031660009081526001602052604090205490565b61020d6104d0565b6000546001600160a01b03166101ba565b6000546001600160a01b0316331461016d565b610144610506565b61020d61027a366004610cc5565b610515565b61016d61028d366004610d4f565b610567565b61016d6102a0366004610d4f565b6105b6565b600454610181565b6101816102bb366004610ce0565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61020d6102f4366004610cc5565b6105c3565b6101ba61dead81565b60606005805461031190610e73565b80601f016020809104026020016040519081016040528092919081815260200182805461033d90610e73565b801561038a5780601f1061035f5761010080835404028352916020019161038a565b820191906000526020600020905b81548152906001019060200180831161036d57829003601f168201915b5050505050905090565b60006103a133848461065e565b50600192915050565b60006103b7848484610783565b610409843361040485604051806060016040528060288152602001610ec5602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610888565b61065e565b5060019392505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916103a191859061040490866108b4565b6000546001600160a01b0316331480610471575060075461010090046001600160a01b031633145b6104c25760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206973206e6f7420746865206f776e6572206f7220734e6f766160448201526064015b60405180910390fd5b6104cc82826108c7565b5050565b6000546001600160a01b031633146104fa5760405162461bcd60e51b81526004016104b990610dce565b61050460006109ad565b565b60606006805461031190610e73565b6000546001600160a01b0316331461053f5760405162461bcd60e51b81526004016104b990610dce565b600780546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b60006103a1338461040485604051806060016040528060258152602001610f13602591393360009081526002602090815260408083206001600160a01b038d1684529091529020549190610888565b60006103a1338484610783565b6000546001600160a01b031633146105ed5760405162461bcd60e51b81526004016104b990610dce565b6001600160a01b0381166106525760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104b9565b61065b816109ad565b50565b6001600160a01b0383166106c05760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104b9565b6001600160a01b0382166107215760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104b9565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600081116107be5760405162461bcd60e51b81526020600482015260086024820152670616d6f756e7420360c41b60448201526064016104b9565b6001600160a01b03821661dead14156107e0576107db83826109fd565b505050565b600060646107ef836002610e3d565b6107f99190610e1b565b905060006108078284610e5c565b90506108138282610e03565b831461086c5760405162461bcd60e51b815260206004820152602260248201527f4e6f76613a3a7472616e736665723a204275726e2076616c756520696e76616c6044820152611a5960f21b60648201526084016104b9565b61087685836109fd565b610881858583610b17565b5050505050565b600081848411156108ac5760405162461bcd60e51b81526004016104b99190610d79565b505050900390565b60006108c08284610e03565b9392505050565b6001600160a01b03821661091d5760405162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104b9565b60035461092a90826108b4565b6003556001600160a01b03821660009081526001602052604090205461095090826108b4565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906109a19085815260200190565b60405180910390a35050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03821661dead1415610a625760405162461bcd60e51b815260206004820152602160248201527f42455032303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104b9565b610a9f81604051806060016040528060228152602001610f38602291396001600160a01b0385166000908152600160205260409020549190610888565b6001600160a01b038316600090815260016020526040902055600354610ac59082610c9d565b600355600454610ad590826108b4565b60045560405181815261dead906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016109a1565b6001600160a01b038316610b7b5760405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104b9565b6001600160a01b038216610bdd5760405162461bcd60e51b815260206004820152602360248201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104b9565b610c1a81604051806060016040528060268152602001610eed602691396001600160a01b0386166000908152600160205260409020549190610888565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610c4990826108b4565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107769085815260200190565b60006108c08284610e5c565b80356001600160a01b0381168114610cc057600080fd5b919050565b600060208284031215610cd757600080fd5b6108c082610ca9565b60008060408385031215610cf357600080fd5b610cfc83610ca9565b9150610d0a60208401610ca9565b90509250929050565b600080600060608486031215610d2857600080fd5b610d3184610ca9565b9250610d3f60208501610ca9565b9150604084013590509250925092565b60008060408385031215610d6257600080fd5b610d6b83610ca9565b946020939093013593505050565b600060208083528351808285015260005b81811015610da657858101830151858201604001528201610d8a565b81811115610db8576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610e1657610e16610eae565b500190565b600082610e3857634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610e5757610e57610eae565b500290565b600082821015610e6e57610e6e610eae565b500390565b600181811c90821680610e8757607f821691505b60208210811415610ea857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365a264697066735822122067c9e47725f57bf67d545a2f51cc1b8282851e464cfdb31a0f9faf5058eba95c64736f6c63430008070033",
  "immutableReferences": {},
  "sourceMap": "97:1783:6:-:0;;;;;;;;;;;;;1339:144:18;;;;;;;;;;;;;-1:-1:-1;;;1339:144:18;;;;;;;;;;;;;;;;-1:-1:-1;;;1339:144:18;;;921:32:19;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;1411:12:18;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;1434:16:18;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;1461:9:18;:14;;-1:-1:-1;;1461:14:18;1473:2;1461:14;;;-1:-1:-1;97:1783:6;;640:96:22;719:10;;640:96::o;2270:187:19:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:19;;;-1:-1:-1;;;;;;2378:17:19;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;97:1783:6:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;97:1783:6;;;-1:-1:-1;97:1783:6;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:24;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;97:1783:6;;;;;;",
  "deployedSourceMap": "97:1783:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1708:92:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3348:161;;;;;;:::i;:::-;;:::i;:::-;;;1613:14:24;;1606:22;1588:41;;1576:2;1561:18;3348:161:18;1448:187:24;2184:100:18;2264:12;;2184:100;;;6636:25:24;;;6624:2;6609:18;2184:100:18;6490:177:24;3980:397:18;;;;;;:::i;:::-;;:::i;161:20:6:-;;;;;;;;-1:-1:-1;;;;;161:20:6;;;;;;-1:-1:-1;;;;;1404:32:24;;;1386:51;;1374:2;1359:18;161:20:6;1240:203:24;1867:92:18;1942:9;;1867:92;;1942:9;;;;6814:36:24;;6802:2;6787:18;1867:92:18;6672:184:24;4785:210:18;;;;;;:::i;:::-;;:::i;979:126:6:-;;;;;;:::i;:::-;;:::i;:::-;;2499:119:18;;;;;;:::i;:::-;-1:-1:-1;;;;;2592:18:18;2565:7;2592:18;;;:9;:18;;;;;;;2499:119;1668:101:19;;;:::i;1551:94:18:-;1603:7;1108:6:19;-1:-1:-1;;;;;1108:6:19;1551:94:18;;496:93:6;536:4;1108:6:19;-1:-1:-1;;;;;1108:6:19;560:10:6;:21;496:93;;2024:96:18;;;:::i;785:87:6:-;;;;;;:::i;:::-;;:::i;5497:311:18:-;;;;;;:::i;:::-;;:::i;2830:167::-;;;;;;:::i;:::-;;:::i;2348:89::-;2418:11;;2348:89;;3059:143;;;;;;:::i;:::-;-1:-1:-1;;;;;3167:18:18;;;3140:7;3167:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3059:143;1918:198:19;;;;;;:::i;:::-;;:::i;635:81:18:-;;674:42;635:81;;1708:92;1754:13;1787:5;1780:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1708:92;:::o;3348:161::-;3423:4;3440:39;719:10:22;3463:7:18;3472:6;3440:8;:39::i;:::-;-1:-1:-1;3497:4:18;3348:161;;;;:::o;3980:397::-;4112:4;4129:36;4139:6;4147:9;4158:6;4129:9;:36::i;:::-;4176:171;4199:6;719:10:22;4247:89:18;4285:6;4247:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4247:19:18;;;;;;:11;:19;;;;;;;;719:10:22;4247:33:18;;;;;;;;;;:37;:89::i;:::-;4176:8;:171::i;:::-;-1:-1:-1;4365:4:18;3980:397;;;;;:::o;4785:210::-;719:10:22;4865:4:18;4914:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;4914:34:18;;;;;;;;;;4865:4;;4882:83;;4905:7;;4914:50;;4953:10;4914:38;:50::i;979:126:6:-;536:4;1108:6:19;-1:-1:-1;;;;;1108:6:19;560:10:6;:21;329:22;;;-1:-1:-1;763:5:6;;;;;-1:-1:-1;;;;;763:5:6;741:10;:28;342:9;321:67;;;;-1:-1:-1;;;321:67:6;;5928:2:24;321:67:6;;;5910:21:24;;;5947:18;;;5940:30;6006:34;5986:18;;;5979:62;6058:18;;321:67:6;;;;;;;;;1078:19:::1;1084:3;1089:7;1078:5;:19::i;:::-;979:126:::0;;:::o;1668:101:19:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:19;719:10:22;1248:23:19;1240:68;;;;-1:-1:-1;;;1240:68:19;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2024:96:18:-;2072:13;2105:7;2098:14;;;;;:::i;785:87:6:-;1082:7:19;1108:6;-1:-1:-1;;;;;1108:6:19;719:10:22;1248:23:19;1240:68;;;;-1:-1:-1;;;1240:68:19;;;;;;;:::i;:::-;850:5:6::1;:14:::0;;-1:-1:-1;;;;;850:14:6;;::::1;;;-1:-1:-1::0;;;;;;850:14:6;;::::1;::::0;;;::::1;::::0;;785:87::o;5497:311:18:-;5582:4;5599:179;719:10:22;5649:7:18;5671:96;5710:15;5671:96;;;;;;;;;;;;;;;;;719:10:22;5671:25:18;;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5671:34:18;;;;;;;;;;;;:38;:96::i;2830:167::-;2908:4;2925:42;719:10:22;2949:9:18;2960:6;2925:9;:42::i;1918:198:19:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:19;719:10:22;1248:23:19;1240:68;;;;-1:-1:-1;;;1240:68:19;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:19;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:19;;3255:2:24;1998:73:19::1;::::0;::::1;3237:21:24::0;3294:2;3274:18;;;3267:30;3333:34;3313:18;;;3306:62;-1:-1:-1;;;3384:18:24;;;3377:36;3430:19;;1998:73:19::1;3053:402:24::0;1998:73:19::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;8686:372:18:-;-1:-1:-1;;;;;8814:19:18;;8806:68;;;;-1:-1:-1;;;8806:68:18;;2850:2:24;8806:68:18;;;2832:21:24;2889:2;2869:18;;;2862:30;2928:34;2908:18;;;2901:62;-1:-1:-1;;;2979:18:24;;;2972:34;3023:19;;8806:68:18;2648:400:24;8806:68:18;-1:-1:-1;;;;;8893:21:18;;8885:68;;;;-1:-1:-1;;;8885:68:18;;6289:2:24;8885:68:18;;;6271:21:24;6328:2;6308:18;;;6301:30;6367:34;6347:18;;;6340:62;-1:-1:-1;;;6418:18:24;;;6411:32;6460:19;;8885:68:18;6087:398:24;8885:68:18;-1:-1:-1;;;;;8966:18:18;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9018:32;;6636:25:24;;;9018:32:18;;6609:18:24;9018:32:18;;;;;;;;8686:372;;;:::o;1184:691:6:-;1308:1;1299:6;:10;1291:31;;;;-1:-1:-1;;;1291:31:6;;4786:2:24;1291:31:6;;;4768:21:24;4825:1;4805:18;;;4798:29;-1:-1:-1;;;4843:18:24;;;4836:38;4891:18;;1291:31:6;4584:331:24;1291:31:6;-1:-1:-1;;;;;1337:25:6;;674:42:18;1337:25:6;1333:535;;;1379:27;1391:6;1399;1379:11;:27::i;:::-;1184:691;;;:::o;1333:535::-;1482:18;1512:3;1503:8;:6;1510:1;1503:8;:::i;:::-;:12;;;;:::i;:::-;1482:33;-1:-1:-1;1580:18:6;1601:17;1482:33;1601:6;:17;:::i;:::-;1580:38;-1:-1:-1;1651:23:6;1664:10;1580:38;1651:23;:::i;:::-;1641:6;:33;1633:80;;;;-1:-1:-1;;;1633:80:6;;3662:2:24;1633:80:6;;;3644:21:24;3701:2;3681:18;;;3674:30;3740:34;3720:18;;;3713:62;-1:-1:-1;;;3791:18:24;;;3784:32;3833:19;;1633:80:6;3460:398:24;1633:80:6;1730:31;1742:6;1750:10;1730:11;:31::i;:::-;1776:46;1792:6;1800:9;1811:10;1776:15;:46::i;:::-;-1:-1:-1;;;;;1184:691:6:o;4945:231:23:-;5061:7;5120:12;5112:6;;;;5104:29;;;;-1:-1:-1;;;5104:29:23;;;;;;;;:::i;:::-;-1:-1:-1;;;5154:5:23;;;4945:231::o;2741:96::-;2799:7;2825:5;2829:1;2825;:5;:::i;:::-;2818:12;2741:96;-1:-1:-1;;;2741:96:23:o;7206:308:18:-;-1:-1:-1;;;;;7282:21:18;;7274:65;;;;-1:-1:-1;;;7274:65:18;;4065:2:24;7274:65:18;;;4047:21:24;4104:2;4084:18;;;4077:30;4143:33;4123:18;;;4116:61;4194:18;;7274:65:18;3863:355:24;7274:65:18;7367:12;;:24;;7384:6;7367:16;:24::i;:::-;7352:12;:39;-1:-1:-1;;;;;7423:18:18;;;;;;:9;:18;;;;;;:30;;7446:6;7423:22;:30::i;:::-;-1:-1:-1;;;;;7402:18:18;;;;;;:9;:18;;;;;;:51;;;;7469:37;;7402:18;;;7469:37;;;;7499:6;6636:25:24;;6624:2;6609:18;;6490:177;7469:37:18;;;;;;;;7206:308;;:::o;2270:187:19:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:19;;;-1:-1:-1;;;;;;2378:17:19;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;7846:400:18:-;-1:-1:-1;;;;;7922:23:18;;674:42;7922:23;;7914:69;;;;-1:-1:-1;;;7914:69:18;;5526:2:24;7914:69:18;;;5508:21:24;5565:2;5545:18;;;5538:30;5604:34;5584:18;;;5577:62;-1:-1:-1;;;5655:18:24;;;5648:31;5696:19;;7914:69:18;5324:397:24;7914:69:18;8017:68;8040:6;8017:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8017:18:18;;;;;;:9;:18;;;;;;;:68;:22;:68::i;:::-;-1:-1:-1;;;;;7996:18:18;;;;;;:9;:18;;;;;:89;8111:12;;:24;;8128:6;8111:16;:24::i;:::-;8096:12;:39;8160:11;;:23;;8176:6;8160:15;:23::i;:::-;8146:11;:37;8199:39;;6636:25:24;;;674:42:18;;-1:-1:-1;;;;;8199:39:18;;;;;6624:2:24;6609:18;8199:39:18;6490:177:24;6298:513:18;-1:-1:-1;;;;;6438:20:18;;6430:70;;;;-1:-1:-1;;;6430:70:18;;2444:2:24;6430:70:18;;;2426:21:24;2483:2;2463:18;;;2456:30;2522:34;2502:18;;;2495:62;-1:-1:-1;;;2573:18:24;;;2566:35;2618:19;;6430:70:18;2242:401:24;6430:70:18;-1:-1:-1;;;;;6519:23:18;;6511:71;;;;-1:-1:-1;;;6511:71:18;;5122:2:24;6511:71:18;;;5104:21:24;5161:2;5141:18;;;5134:30;5200:34;5180:18;;;5173:62;-1:-1:-1;;;5251:18:24;;;5244:33;5294:19;;6511:71:18;4920:399:24;6511:71:18;6615;6637:6;6615:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6615:17:18;;;;;;:9;:17;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;6595:17:18;;;;;;;:9;:17;;;;;;:91;;;;6720:20;;;;;;;:32;;6745:6;6720:24;:32::i;:::-;-1:-1:-1;;;;;6697:20:18;;;;;;;:9;:20;;;;;;;:55;;;;6768:35;;;;;;;;;;6796:6;6636:25:24;;6624:2;6609:18;;6490:177;3108:96:23;3166:7;3192:5;3196:1;3192;:5;:::i;14:173:24:-;82:20;;-1:-1:-1;;;;;131:31:24;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:24:o;1640:597::-;1752:4;1781:2;1810;1799:9;1792:21;1842:6;1836:13;1885:6;1880:2;1869:9;1865:18;1858:34;1910:1;1920:140;1934:6;1931:1;1928:13;1920:140;;;2029:14;;;2025:23;;2019:30;1995:17;;;2014:2;1991:26;1984:66;1949:10;;1920:140;;;2078:6;2075:1;2072:13;2069:91;;;2148:1;2143:2;2134:6;2123:9;2119:22;2115:31;2108:42;2069:91;-1:-1:-1;2221:2:24;2200:15;-1:-1:-1;;2196:29:24;2181:45;;;;2228:2;2177:54;;1640:597;-1:-1:-1;;;1640:597:24:o;4223:356::-;4425:2;4407:21;;;4444:18;;;4437:30;4503:34;4498:2;4483:18;;4476:62;4570:2;4555:18;;4223:356::o;6861:128::-;6901:3;6932:1;6928:6;6925:1;6922:13;6919:39;;;6938:18;;:::i;:::-;-1:-1:-1;6974:9:24;;6861:128::o;6994:217::-;7034:1;7060;7050:132;;7104:10;7099:3;7095:20;7092:1;7085:31;7139:4;7136:1;7129:15;7167:4;7164:1;7157:15;7050:132;-1:-1:-1;7196:9:24;;6994:217::o;7216:168::-;7256:7;7322:1;7318;7314:6;7310:14;7307:1;7304:21;7299:1;7292:9;7285:17;7281:45;7278:71;;;7329:18;;:::i;:::-;-1:-1:-1;7369:9:24;;7216:168::o;7389:125::-;7429:4;7457:1;7454;7451:8;7448:34;;;7462:18;;:::i;:::-;-1:-1:-1;7499:9:24;;7389:125::o;7519:380::-;7598:1;7594:12;;;;7641;;;7662:61;;7716:4;7708:6;7704:17;7694:27;;7662:61;7769:2;7761:6;7758:14;7738:18;7735:38;7732:161;;;7815:10;7810:3;7806:20;7803:1;7796:31;7850:4;7847:1;7840:15;7878:4;7875:1;7868:15;7732:161;;7519:380;;;:::o;7904:127::-;7965:10;7960:3;7956:20;7953:1;7946:31;7996:4;7993:1;7986:15;8020:4;8017:1;8010:15",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.7;\r\n\r\nimport \"./libs/ShibaBEP20.sol\";\r\n\r\ncontract NovaToken is ShibaBEP20(\"ShibaNOVA \", \"NOVA\") {\r\n\r\n    address public sNova;\r\n\r\n    /*\r\n     * @dev Throws if called by any account other than the owner or sNova\r\n     */\r\n    modifier onlyOwnerOrSNova() {\r\n        require(isOwner() || isSNova(), \"caller is not the owner or sNova\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the caller is the current owner.\r\n     */\r\n    function isOwner() public view returns (bool) {\r\n        return msg.sender == owner();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the caller is sNova contracts.\r\n     */\r\n    function isSNova() internal view returns (bool) {\r\n        return msg.sender == address(sNova);\r\n    }\r\n\r\n    function setupSNova(address _sNova) external onlyOwner{\r\n        sNova = _sNova;\r\n    }\r\n\r\n    /// @notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterShiba).\r\n    function mint(address _to, uint256 _amount) external virtual override onlyOwnerOrSNova  {\r\n        _mint(_to, _amount);\r\n    }\r\n\r\n\r\n    /// @dev overrides transfer function to meet tokenomics of Nova\r\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual override {\r\n        require(amount > 0, \"amount 0\");\r\n        if (recipient == BURN_ADDRESS) {\r\n            super._burn(sender, amount);\r\n        } else {\r\n            // 2% of every transfer burnt\r\n            uint256 burnAmount = amount*2/100;\r\n            // 98% of transfer sent to recipient\r\n            uint256 sendAmount = amount-burnAmount;\r\n            require(amount == sendAmount + burnAmount, \"Nova::transfer: Burn value invalid\");\r\n\r\n            super._burn(sender, burnAmount);\r\n            super._transfer(sender, recipient, sendAmount);\r\n            amount = sendAmount;\r\n        }\r\n    }\r\n\r\n}",
  "sourcePath": "D:/Novaria/contracts/NovaToken.sol",
  "ast": {
    "absolutePath": "/D/Novaria/contracts/NovaToken.sol",
    "exportedSymbols": {
      "Address": [
        12125
      ],
      "Context": [
        12147
      ],
      "IBEP20": [
        10393
      ],
      "NovaToken": [
        9733
      ],
      "Ownable": [
        11752
      ],
      "SafeMath": [
        12459
      ],
      "ShibaBEP20": [
        11647
      ]
    },
    "id": 9734,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9581,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:6"
      },
      {
        "absolutePath": "/D/Novaria/contracts/libs/ShibaBEP20.sol",
        "file": "./libs/ShibaBEP20.sol",
        "id": 9582,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9734,
        "sourceUnit": 11648,
        "src": "62:31:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "53686962614e4f564120",
                "id": 9584,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "130:12:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_4b54363f53ee3b97f1de5ff7f850e64fa7d038bf1d632b8a1bf10280f7ea0595",
                  "typeString": "literal_string \"ShibaNOVA \""
                },
                "value": "ShibaNOVA "
              },
              {
                "hexValue": "4e4f5641",
                "id": 9585,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "144:6:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_6c815368d22c13cd70e1de11ebe86229e240e018e6583c59946d468748640306",
                  "typeString": "literal_string \"NOVA\""
                },
                "value": "NOVA"
              }
            ],
            "baseName": {
              "id": 9583,
              "name": "ShibaBEP20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11647,
              "src": "119:10:6"
            },
            "id": 9586,
            "nodeType": "InheritanceSpecifier",
            "src": "119:32:6"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 9733,
        "linearizedBaseContracts": [
          9733,
          11647,
          11752,
          10393,
          12147
        ],
        "name": "NovaToken",
        "nameLocation": "106:9:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "2ce39db1",
            "id": 9588,
            "mutability": "mutable",
            "name": "sNova",
            "nameLocation": "176:5:6",
            "nodeType": "VariableDeclaration",
            "scope": 9733,
            "src": "161:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9587,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "161:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 9600,
              "nodeType": "Block",
              "src": "310:98:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 9591,
                            "name": "isOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9614,
                            "src": "329:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 9592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "329:9:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 9593,
                            "name": "isSNova",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9629,
                            "src": "342:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 9594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "342:9:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "329:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206973206e6f7420746865206f776e6572206f7220734e6f7661",
                        "id": 9596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "353:34:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5583e28ebcff72a8cebca023463673e9f156021121ebb50cf259c52a58a6e87",
                          "typeString": "literal_string \"caller is not the owner or sNova\""
                        },
                        "value": "caller is not the owner or sNova"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5583e28ebcff72a8cebca023463673e9f156021121ebb50cf259c52a58a6e87",
                          "typeString": "literal_string \"caller is not the owner or sNova\""
                        }
                      ],
                      "id": 9590,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "321:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "321:67:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9598,
                  "nodeType": "ExpressionStatement",
                  "src": "321:67:6"
                },
                {
                  "id": 9599,
                  "nodeType": "PlaceholderStatement",
                  "src": "399:1:6"
                }
              ]
            },
            "id": 9601,
            "name": "onlyOwnerOrSNova",
            "nameLocation": "291:16:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 9589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "307:2:6"
            },
            "src": "282:126:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9613,
              "nodeType": "Block",
              "src": "542:47:6",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 9607,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "560:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 9608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "560:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 9609,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11680,
                        "src": "574:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 9610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "574:7:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "560:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9606,
                  "id": 9612,
                  "nodeType": "Return",
                  "src": "553:28:6"
                }
              ]
            },
            "documentation": {
              "id": 9602,
              "nodeType": "StructuredDocumentation",
              "src": "416:74:6",
              "text": " @dev Returns true if the caller is the current owner."
            },
            "functionSelector": "8f32d59b",
            "id": 9614,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOwner",
            "nameLocation": "505:7:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "512:2:6"
            },
            "returnParameters": {
              "id": 9606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9605,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9614,
                  "src": "536:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9604,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "536:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "535:6:6"
            },
            "scope": 9733,
            "src": "496:93:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9628,
              "nodeType": "Block",
              "src": "723:54:6",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 9620,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "741:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 9621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "741:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 9624,
                          "name": "sNova",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9588,
                          "src": "763:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "755:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9622,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "755:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "755:14:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "741:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9619,
                  "id": 9627,
                  "nodeType": "Return",
                  "src": "734:35:6"
                }
              ]
            },
            "documentation": {
              "id": 9615,
              "nodeType": "StructuredDocumentation",
              "src": "597:72:6",
              "text": " @dev Returns true if the caller is sNova contracts."
            },
            "id": 9629,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isSNova",
            "nameLocation": "684:7:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "691:2:6"
            },
            "returnParameters": {
              "id": 9619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9618,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9629,
                  "src": "717:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9617,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "717:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "716:6:6"
            },
            "scope": 9733,
            "src": "675:102:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9640,
              "nodeType": "Block",
              "src": "839:33:6",
              "statements": [
                {
                  "expression": {
                    "id": 9638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9636,
                      "name": "sNova",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9588,
                      "src": "850:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9637,
                      "name": "_sNova",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9631,
                      "src": "858:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "850:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9639,
                  "nodeType": "ExpressionStatement",
                  "src": "850:14:6"
                }
              ]
            },
            "functionSelector": "9dfd5f05",
            "id": 9641,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9634,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9633,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11694,
                  "src": "830:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "830:9:6"
              }
            ],
            "name": "setupSNova",
            "nameLocation": "794:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9631,
                  "mutability": "mutable",
                  "name": "_sNova",
                  "nameLocation": "813:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 9641,
                  "src": "805:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "805:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "804:16:6"
            },
            "returnParameters": {
              "id": 9635,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "839:0:6"
            },
            "scope": 9733,
            "src": "785:87:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11477
            ],
            "body": {
              "id": 9657,
              "nodeType": "Block",
              "src": "1067:38:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9653,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9644,
                        "src": "1084:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9654,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9646,
                        "src": "1089:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9652,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11523,
                      "src": "1078:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 9655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1078:19:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9656,
                  "nodeType": "ExpressionStatement",
                  "src": "1078:19:6"
                }
              ]
            },
            "documentation": {
              "id": 9642,
              "nodeType": "StructuredDocumentation",
              "src": "880:93:6",
              "text": "@notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterShiba)."
            },
            "functionSelector": "40c10f19",
            "id": 9658,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9650,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9649,
                  "name": "onlyOwnerOrSNova",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9601,
                  "src": "1049:16:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "1049:16:6"
              }
            ],
            "name": "mint",
            "nameLocation": "988:4:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9648,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1040:8:6"
            },
            "parameters": {
              "id": 9647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9644,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1001:3:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 9658,
                  "src": "993:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9643,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "993:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9646,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1014:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 9658,
                  "src": "1006:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9645,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "992:30:6"
            },
            "returnParameters": {
              "id": 9651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1067:0:6"
            },
            "scope": 9733,
            "src": "979:126:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11462
            ],
            "body": {
              "id": 9731,
              "nodeType": "Block",
              "src": "1280:595:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9670,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9665,
                          "src": "1299:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 9671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1308:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1299:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e742030",
                        "id": 9673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1311:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa0c75600cc81ac69d9358030c40cab76c7291229be6a13e3d364c52d7ae813b",
                          "typeString": "literal_string \"amount 0\""
                        },
                        "value": "amount 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa0c75600cc81ac69d9358030c40cab76c7291229be6a13e3d364c52d7ae813b",
                          "typeString": "literal_string \"amount 0\""
                        }
                      ],
                      "id": 9669,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1291:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1291:31:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9675,
                  "nodeType": "ExpressionStatement",
                  "src": "1291:31:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9676,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9663,
                      "src": "1337:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 9677,
                      "name": "BURN_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11132,
                      "src": "1350:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1337:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 9729,
                    "nodeType": "Block",
                    "src": "1424:444:6",
                    "statements": [
                      {
                        "assignments": [
                          9688
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 9688,
                            "mutability": "mutable",
                            "name": "burnAmount",
                            "nameLocation": "1490:10:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 9729,
                            "src": "1482:18:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 9687,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1482:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 9694,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 9691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 9689,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9665,
                              "src": "1503:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 9690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1510:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "1503:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 9692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1512:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "1503:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1482:33:6"
                      },
                      {
                        "assignments": [
                          9696
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 9696,
                            "mutability": "mutable",
                            "name": "sendAmount",
                            "nameLocation": "1588:10:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 9729,
                            "src": "1580:18:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 9695,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1580:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 9700,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 9697,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9665,
                            "src": "1601:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 9698,
                            "name": "burnAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9688,
                            "src": "1608:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1601:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1580:38:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 9706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 9702,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9665,
                                "src": "1641:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 9705,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 9703,
                                  "name": "sendAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9696,
                                  "src": "1651:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 9704,
                                  "name": "burnAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9688,
                                  "src": "1664:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1651:23:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1641:33:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f76613a3a7472616e736665723a204275726e2076616c756520696e76616c6964",
                              "id": 9707,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1676:36:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5fe528bdccd3636f08bf3818ed6bb8ffc861cbc53939150f5c6fcaf21e8516f9",
                                "typeString": "literal_string \"Nova::transfer: Burn value invalid\""
                              },
                              "value": "Nova::transfer: Burn value invalid"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5fe528bdccd3636f08bf3818ed6bb8ffc861cbc53939150f5c6fcaf21e8516f9",
                                "typeString": "literal_string \"Nova::transfer: Burn value invalid\""
                              }
                            ],
                            "id": 9701,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1633:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 9708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1633:80:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9709,
                        "nodeType": "ExpressionStatement",
                        "src": "1633:80:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 9713,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9661,
                              "src": "1742:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 9714,
                              "name": "burnAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9688,
                              "src": "1750:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 9710,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "1730:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_NovaToken_$9733_$",
                                "typeString": "type(contract super NovaToken)"
                              }
                            },
                            "id": 9712,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11571,
                            "src": "1730:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 9715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1730:31:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9716,
                        "nodeType": "ExpressionStatement",
                        "src": "1730:31:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 9720,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9661,
                              "src": "1792:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 9721,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9663,
                              "src": "1800:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 9722,
                              "name": "sendAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9696,
                              "src": "1811:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 9717,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "1776:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_NovaToken_$9733_$",
                                "typeString": "type(contract super NovaToken)"
                              }
                            },
                            "id": 9719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11462,
                            "src": "1776:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 9723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1776:46:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9724,
                        "nodeType": "ExpressionStatement",
                        "src": "1776:46:6"
                      },
                      {
                        "expression": {
                          "id": 9727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 9725,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9665,
                            "src": "1837:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 9726,
                            "name": "sendAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9696,
                            "src": "1846:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1837:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9728,
                        "nodeType": "ExpressionStatement",
                        "src": "1837:19:6"
                      }
                    ]
                  },
                  "id": 9730,
                  "nodeType": "IfStatement",
                  "src": "1333:535:6",
                  "trueBody": {
                    "id": 9686,
                    "nodeType": "Block",
                    "src": "1364:54:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 9682,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9661,
                              "src": "1391:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 9683,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9665,
                              "src": "1399:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 9679,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "1379:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_NovaToken_$9733_$",
                                "typeString": "type(contract super NovaToken)"
                              }
                            },
                            "id": 9681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11571,
                            "src": "1379:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 9684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1379:27:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9685,
                        "nodeType": "ExpressionStatement",
                        "src": "1379:27:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 9659,
              "nodeType": "StructuredDocumentation",
              "src": "1115:63:6",
              "text": "@dev overrides transfer function to meet tokenomics of Nova"
            },
            "id": 9732,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "1193:9:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9667,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1271:8:6"
            },
            "parameters": {
              "id": 9666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9661,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1211:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 9732,
                  "src": "1203:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9660,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1203:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9663,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1227:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 9732,
                  "src": "1219:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1219:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9665,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1246:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 9732,
                  "src": "1238:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9664,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1202:51:6"
            },
            "returnParameters": {
              "id": 9668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1280:0:6"
            },
            "scope": 9733,
            "src": "1184:691:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 9734,
        "src": "97:1783:6",
        "usedErrors": []
      }
    ],
    "src": "35:1845:6"
  },
  "legacyAST": {
    "absolutePath": "/D/Novaria/contracts/NovaToken.sol",
    "exportedSymbols": {
      "Address": [
        12125
      ],
      "Context": [
        12147
      ],
      "IBEP20": [
        10393
      ],
      "NovaToken": [
        9733
      ],
      "Ownable": [
        11752
      ],
      "SafeMath": [
        12459
      ],
      "ShibaBEP20": [
        11647
      ]
    },
    "id": 9734,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9581,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:6"
      },
      {
        "absolutePath": "/D/Novaria/contracts/libs/ShibaBEP20.sol",
        "file": "./libs/ShibaBEP20.sol",
        "id": 9582,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 9734,
        "sourceUnit": 11648,
        "src": "62:31:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "53686962614e4f564120",
                "id": 9584,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "130:12:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_4b54363f53ee3b97f1de5ff7f850e64fa7d038bf1d632b8a1bf10280f7ea0595",
                  "typeString": "literal_string \"ShibaNOVA \""
                },
                "value": "ShibaNOVA "
              },
              {
                "hexValue": "4e4f5641",
                "id": 9585,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "144:6:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_6c815368d22c13cd70e1de11ebe86229e240e018e6583c59946d468748640306",
                  "typeString": "literal_string \"NOVA\""
                },
                "value": "NOVA"
              }
            ],
            "baseName": {
              "id": 9583,
              "name": "ShibaBEP20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11647,
              "src": "119:10:6"
            },
            "id": 9586,
            "nodeType": "InheritanceSpecifier",
            "src": "119:32:6"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 9733,
        "linearizedBaseContracts": [
          9733,
          11647,
          11752,
          10393,
          12147
        ],
        "name": "NovaToken",
        "nameLocation": "106:9:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "2ce39db1",
            "id": 9588,
            "mutability": "mutable",
            "name": "sNova",
            "nameLocation": "176:5:6",
            "nodeType": "VariableDeclaration",
            "scope": 9733,
            "src": "161:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 9587,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "161:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 9600,
              "nodeType": "Block",
              "src": "310:98:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 9595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 9591,
                            "name": "isOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9614,
                            "src": "329:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 9592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "329:9:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 9593,
                            "name": "isSNova",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9629,
                            "src": "342:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 9594,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "342:9:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "329:22:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206973206e6f7420746865206f776e6572206f7220734e6f7661",
                        "id": 9596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "353:34:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5583e28ebcff72a8cebca023463673e9f156021121ebb50cf259c52a58a6e87",
                          "typeString": "literal_string \"caller is not the owner or sNova\""
                        },
                        "value": "caller is not the owner or sNova"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5583e28ebcff72a8cebca023463673e9f156021121ebb50cf259c52a58a6e87",
                          "typeString": "literal_string \"caller is not the owner or sNova\""
                        }
                      ],
                      "id": 9590,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "321:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "321:67:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9598,
                  "nodeType": "ExpressionStatement",
                  "src": "321:67:6"
                },
                {
                  "id": 9599,
                  "nodeType": "PlaceholderStatement",
                  "src": "399:1:6"
                }
              ]
            },
            "id": 9601,
            "name": "onlyOwnerOrSNova",
            "nameLocation": "291:16:6",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 9589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "307:2:6"
            },
            "src": "282:126:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9613,
              "nodeType": "Block",
              "src": "542:47:6",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 9607,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "560:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 9608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "560:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 9609,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11680,
                        "src": "574:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 9610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "574:7:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "560:21:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9606,
                  "id": 9612,
                  "nodeType": "Return",
                  "src": "553:28:6"
                }
              ]
            },
            "documentation": {
              "id": 9602,
              "nodeType": "StructuredDocumentation",
              "src": "416:74:6",
              "text": " @dev Returns true if the caller is the current owner."
            },
            "functionSelector": "8f32d59b",
            "id": 9614,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOwner",
            "nameLocation": "505:7:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9603,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "512:2:6"
            },
            "returnParameters": {
              "id": 9606,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9605,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9614,
                  "src": "536:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9604,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "536:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "535:6:6"
            },
            "scope": 9733,
            "src": "496:93:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 9628,
              "nodeType": "Block",
              "src": "723:54:6",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 9620,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "741:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 9621,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "741:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 9624,
                          "name": "sNova",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9588,
                          "src": "763:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 9623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "755:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 9622,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "755:7:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 9625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "755:14:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "741:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 9619,
                  "id": 9627,
                  "nodeType": "Return",
                  "src": "734:35:6"
                }
              ]
            },
            "documentation": {
              "id": 9615,
              "nodeType": "StructuredDocumentation",
              "src": "597:72:6",
              "text": " @dev Returns true if the caller is sNova contracts."
            },
            "id": 9629,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isSNova",
            "nameLocation": "684:7:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9616,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "691:2:6"
            },
            "returnParameters": {
              "id": 9619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9618,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9629,
                  "src": "717:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 9617,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "717:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "716:6:6"
            },
            "scope": 9733,
            "src": "675:102:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 9640,
              "nodeType": "Block",
              "src": "839:33:6",
              "statements": [
                {
                  "expression": {
                    "id": 9638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9636,
                      "name": "sNova",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9588,
                      "src": "850:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 9637,
                      "name": "_sNova",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9631,
                      "src": "858:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "850:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 9639,
                  "nodeType": "ExpressionStatement",
                  "src": "850:14:6"
                }
              ]
            },
            "functionSelector": "9dfd5f05",
            "id": 9641,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9634,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9633,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 11694,
                  "src": "830:9:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "830:9:6"
              }
            ],
            "name": "setupSNova",
            "nameLocation": "794:10:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9631,
                  "mutability": "mutable",
                  "name": "_sNova",
                  "nameLocation": "813:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 9641,
                  "src": "805:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "805:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "804:16:6"
            },
            "returnParameters": {
              "id": 9635,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "839:0:6"
            },
            "scope": 9733,
            "src": "785:87:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11477
            ],
            "body": {
              "id": 9657,
              "nodeType": "Block",
              "src": "1067:38:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 9653,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9644,
                        "src": "1084:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 9654,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9646,
                        "src": "1089:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 9652,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11523,
                      "src": "1078:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 9655,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1078:19:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9656,
                  "nodeType": "ExpressionStatement",
                  "src": "1078:19:6"
                }
              ]
            },
            "documentation": {
              "id": 9642,
              "nodeType": "StructuredDocumentation",
              "src": "880:93:6",
              "text": "@notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterShiba)."
            },
            "functionSelector": "40c10f19",
            "id": 9658,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9650,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9649,
                  "name": "onlyOwnerOrSNova",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9601,
                  "src": "1049:16:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "1049:16:6"
              }
            ],
            "name": "mint",
            "nameLocation": "988:4:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9648,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1040:8:6"
            },
            "parameters": {
              "id": 9647,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9644,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1001:3:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 9658,
                  "src": "993:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9643,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "993:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9646,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1014:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 9658,
                  "src": "1006:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9645,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "992:30:6"
            },
            "returnParameters": {
              "id": 9651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1067:0:6"
            },
            "scope": 9733,
            "src": "979:126:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11462
            ],
            "body": {
              "id": 9731,
              "nodeType": "Block",
              "src": "1280:595:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 9672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 9670,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9665,
                          "src": "1299:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 9671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1308:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1299:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e742030",
                        "id": 9673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1311:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa0c75600cc81ac69d9358030c40cab76c7291229be6a13e3d364c52d7ae813b",
                          "typeString": "literal_string \"amount 0\""
                        },
                        "value": "amount 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa0c75600cc81ac69d9358030c40cab76c7291229be6a13e3d364c52d7ae813b",
                          "typeString": "literal_string \"amount 0\""
                        }
                      ],
                      "id": 9669,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1291:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 9674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1291:31:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9675,
                  "nodeType": "ExpressionStatement",
                  "src": "1291:31:6"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 9678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 9676,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9663,
                      "src": "1337:9:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 9677,
                      "name": "BURN_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11132,
                      "src": "1350:12:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1337:25:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 9729,
                    "nodeType": "Block",
                    "src": "1424:444:6",
                    "statements": [
                      {
                        "assignments": [
                          9688
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 9688,
                            "mutability": "mutable",
                            "name": "burnAmount",
                            "nameLocation": "1490:10:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 9729,
                            "src": "1482:18:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 9687,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1482:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 9694,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 9691,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 9689,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9665,
                              "src": "1503:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 9690,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1510:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "1503:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 9692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1512:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "1503:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1482:33:6"
                      },
                      {
                        "assignments": [
                          9696
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 9696,
                            "mutability": "mutable",
                            "name": "sendAmount",
                            "nameLocation": "1588:10:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 9729,
                            "src": "1580:18:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 9695,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1580:7:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 9700,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 9699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 9697,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9665,
                            "src": "1601:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 9698,
                            "name": "burnAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9688,
                            "src": "1608:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1601:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1580:38:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 9706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 9702,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 9665,
                                "src": "1641:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 9705,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 9703,
                                  "name": "sendAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9696,
                                  "src": "1651:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 9704,
                                  "name": "burnAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 9688,
                                  "src": "1664:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1651:23:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1641:33:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f76613a3a7472616e736665723a204275726e2076616c756520696e76616c6964",
                              "id": 9707,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1676:36:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5fe528bdccd3636f08bf3818ed6bb8ffc861cbc53939150f5c6fcaf21e8516f9",
                                "typeString": "literal_string \"Nova::transfer: Burn value invalid\""
                              },
                              "value": "Nova::transfer: Burn value invalid"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5fe528bdccd3636f08bf3818ed6bb8ffc861cbc53939150f5c6fcaf21e8516f9",
                                "typeString": "literal_string \"Nova::transfer: Burn value invalid\""
                              }
                            ],
                            "id": 9701,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1633:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 9708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1633:80:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9709,
                        "nodeType": "ExpressionStatement",
                        "src": "1633:80:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 9713,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9661,
                              "src": "1742:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 9714,
                              "name": "burnAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9688,
                              "src": "1750:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 9710,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "1730:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_NovaToken_$9733_$",
                                "typeString": "type(contract super NovaToken)"
                              }
                            },
                            "id": 9712,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11571,
                            "src": "1730:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 9715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1730:31:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9716,
                        "nodeType": "ExpressionStatement",
                        "src": "1730:31:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 9720,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9661,
                              "src": "1792:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 9721,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9663,
                              "src": "1800:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 9722,
                              "name": "sendAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9696,
                              "src": "1811:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 9717,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "1776:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_NovaToken_$9733_$",
                                "typeString": "type(contract super NovaToken)"
                              }
                            },
                            "id": 9719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11462,
                            "src": "1776:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 9723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1776:46:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9724,
                        "nodeType": "ExpressionStatement",
                        "src": "1776:46:6"
                      },
                      {
                        "expression": {
                          "id": 9727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 9725,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9665,
                            "src": "1837:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 9726,
                            "name": "sendAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9696,
                            "src": "1846:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1837:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 9728,
                        "nodeType": "ExpressionStatement",
                        "src": "1837:19:6"
                      }
                    ]
                  },
                  "id": 9730,
                  "nodeType": "IfStatement",
                  "src": "1333:535:6",
                  "trueBody": {
                    "id": 9686,
                    "nodeType": "Block",
                    "src": "1364:54:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 9682,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9661,
                              "src": "1391:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 9683,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 9665,
                              "src": "1399:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 9679,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "1379:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_NovaToken_$9733_$",
                                "typeString": "type(contract super NovaToken)"
                              }
                            },
                            "id": 9681,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11571,
                            "src": "1379:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 9684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1379:27:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 9685,
                        "nodeType": "ExpressionStatement",
                        "src": "1379:27:6"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 9659,
              "nodeType": "StructuredDocumentation",
              "src": "1115:63:6",
              "text": "@dev overrides transfer function to meet tokenomics of Nova"
            },
            "id": 9732,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "1193:9:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 9667,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1271:8:6"
            },
            "parameters": {
              "id": 9666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9661,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1211:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 9732,
                  "src": "1203:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9660,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1203:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9663,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1227:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 9732,
                  "src": "1219:17:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1219:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 9665,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1246:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 9732,
                  "src": "1238:14:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 9664,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1202:51:6"
            },
            "returnParameters": {
              "id": 9668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1280:0:6"
            },
            "scope": 9733,
            "src": "1184:691:6",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 9734,
        "src": "97:1783:6",
        "usedErrors": []
      }
    ],
    "src": "35:1845:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2022-02-26T21:26:53.574Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {BEP20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {BEP20-balanceOf}."
      },
      "burnSupply()": {
        "details": "See {BEP20-totalSupply}."
      },
      "decimals()": {
        "details": "Returns the token decimals."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getOwner()": {
        "details": "Returns the bep token owner."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "name()": {
        "details": "Returns the token name."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the token symbol."
      },
      "totalSupply()": {
        "details": "See {BEP20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "mint(address,uint256)": {
        "notice": "Creates `_amount` token to `_to`. Must only be called by the owner (MasterShiba)."
      }
    },
    "version": 1
  }
}