{
  "contractName": "NovaToken",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BURN_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sNova",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sNova",
          "type": "address"
        }
      ],
      "name": "setupSNova",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURN_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sNova\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sNova\",\"type\":\"address\"}],\"name\":\"setupSNova\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"burnSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"mint(address,uint256)\":{\"notice\":\"Creates `_amount` token to `_to`. Must only be called by the owner (MasterShiba).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/NovaToken.sol\":\"NovaToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad0fb4425453220f15bdb8c4e009052839804bb725797b6d8c02ee2271bc3c23\",\"dweb:/ipfs/QmPtjdMxzEifPUEUa6cKX1yfTWjaZV6QtdwMdN6bEL9FBM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9944d1038f27dcebff810d7ba16b3b8058b967173d76874fb72dd7cd84129656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c455cda07c5f8978c57e545ddde382552d3a55b6e3682e0f809ed07ec7defbe\",\"dweb:/ipfs/QmXkoKbxyMcMzjYdkXi5t4t3ZjBQ81pj7AaanS9jhePxyt\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405\",\"dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x29c462775f5b4c76dce400f120f3530aa3f81da42c839f975dc2b64784d22434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://063db5d664d3d5bae10d0056c9d00339265229532d06b53d5f2e91778b2e428d\",\"dweb:/ipfs/QmWM92rU59t6BcZSj4w6ikoPL32R9hyTMb9Msg5X8vvu1s\"]},\"project:/contracts/NovaToken.sol\":{\"keccak256\":\"0xfe93f46479e773f4540f024a7c634ac9858b62a1a23053542f497ae4ab3a7f12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f03872af7145c25ff61bc2e07d5e41a67a79f258d699c8de9791b8b6763a5220\",\"dweb:/ipfs/QmfWuzx764Jj7E3NKtpeAM1kpoqof9fjrNPYPSY62eguyi\"]},\"project:/contracts/interfaces/IBEP20.sol\":{\"keccak256\":\"0x06827c4a144efe4b7f4eebe7cc9b3cec72ab103f0b3bc8ed2b17b7eacb8b8305\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2d0a9616491ec4dd28a23491a156731d9c719edc3d78022e534c7ecd9bf51b6e\",\"dweb:/ipfs/QmTimAYxJtMyQkYWM41V85YvSuGXNiNiQCnqauN5gRxG9W\"]},\"project:/contracts/libs/ShibaBEP20.sol\":{\"keccak256\":\"0xdbbcbf68562c3d2e01ad847c619d650da247ab4f670dc8b85029d5a7618becd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310352c2b4d2bee8c1edf0a4a8e94c7d7430bb246478376c7b74d2899aee1da9\",\"dweb:/ipfs/QmZb9vXsFbvP7vy2WnGpKSVT6EsqH4KohRTy3DhPrnD7yV\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280600a815260200169029b434b130a727ab20960b51b815250604051806040016040528060048152602001634e4f564160e01b8152506200006c62000066620000ad60201b60201c565b620000b1565b81516200008190600590602085019062000101565b5080516200009790600690602084019062000101565b50506007805460ff1916601217905550620001e4565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280546200010f90620001a7565b90600052602060002090601f0160209004810192826200013357600085556200017e565b82601f106200014e57805160ff19168380011785556200017e565b828001600101855582156200017e579182015b828111156200017e57825182559160200191906001019062000161565b506200018c92915062000190565b5090565b5b808211156200018c576000815560010162000191565b600181811c90821680620001bc57607f821691505b60208210811415620001de57634e487b7160e01b600052602260045260246000fd5b50919050565b610f8f80620001f46000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063893d20e8116100b8578063a457c2d71161007c578063a457c2d71461027f578063a9059cbb14610292578063b03e6478146102a5578063dd62ed3e146102ad578063f2fde38b146102e6578063fccc2813146102f957600080fd5b8063893d20e8146102405780638da5cb5b146102405780638f32d59b1461025157806395d89b41146102645780639dfd5f051461026c57600080fd5b8063313ce567116100ff578063313ce567146101d257806339509351146101e757806340c10f19146101fa57806370a082311461020f578063715018a61461023857600080fd5b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461017d57806323b872dd1461018f5780632ce39db1146101a2575b600080fd5b610144610302565b6040516101519190610d79565b60405180910390f35b61016d610168366004610d4f565b610394565b6040519015158152602001610151565b6003545b604051908152602001610151565b61016d61019d366004610d13565b6103aa565b6007546101ba9061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610151565b60075460405160ff9091168152602001610151565b61016d6101f5366004610d4f565b610413565b61020d610208366004610d4f565b610449565b005b61018161021d366004610cc5565b6001600160a01b031660009081526001602052604090205490565b61020d6104d0565b6000546001600160a01b03166101ba565b6000546001600160a01b0316331461016d565b610144610506565b61020d61027a366004610cc5565b610515565b61016d61028d366004610d4f565b610567565b61016d6102a0366004610d4f565b6105b6565b600454610181565b6101816102bb366004610ce0565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61020d6102f4366004610cc5565b6105c3565b6101ba61dead81565b60606005805461031190610e73565b80601f016020809104026020016040519081016040528092919081815260200182805461033d90610e73565b801561038a5780601f1061035f5761010080835404028352916020019161038a565b820191906000526020600020905b81548152906001019060200180831161036d57829003601f168201915b5050505050905090565b60006103a133848461065e565b50600192915050565b60006103b7848484610783565b610409843361040485604051806060016040528060288152602001610ec5602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610888565b61065e565b5060019392505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916103a191859061040490866108b4565b6000546001600160a01b0316331480610471575060075461010090046001600160a01b031633145b6104c25760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206973206e6f7420746865206f776e6572206f7220734e6f766160448201526064015b60405180910390fd5b6104cc82826108c7565b5050565b6000546001600160a01b031633146104fa5760405162461bcd60e51b81526004016104b990610dce565b61050460006109ad565b565b60606006805461031190610e73565b6000546001600160a01b0316331461053f5760405162461bcd60e51b81526004016104b990610dce565b600780546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b60006103a1338461040485604051806060016040528060258152602001610f13602591393360009081526002602090815260408083206001600160a01b038d1684529091529020549190610888565b60006103a1338484610783565b6000546001600160a01b031633146105ed5760405162461bcd60e51b81526004016104b990610dce565b6001600160a01b0381166106525760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104b9565b61065b816109ad565b50565b6001600160a01b0383166106c05760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104b9565b6001600160a01b0382166107215760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104b9565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600081116107be5760405162461bcd60e51b81526020600482015260086024820152670616d6f756e7420360c41b60448201526064016104b9565b6001600160a01b03821661dead14156107e0576107db83826109fd565b505050565b600060646107ef836002610e3d565b6107f99190610e1b565b905060006108078284610e5c565b90506108138282610e03565b831461086c5760405162461bcd60e51b815260206004820152602260248201527f4e6f76613a3a7472616e736665723a204275726e2076616c756520696e76616c6044820152611a5960f21b60648201526084016104b9565b61087685836109fd565b610881858583610b17565b5050505050565b600081848411156108ac5760405162461bcd60e51b81526004016104b99190610d79565b505050900390565b60006108c08284610e03565b9392505050565b6001600160a01b03821661091d5760405162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104b9565b60035461092a90826108b4565b6003556001600160a01b03821660009081526001602052604090205461095090826108b4565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906109a19085815260200190565b60405180910390a35050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03821661dead1415610a625760405162461bcd60e51b815260206004820152602160248201527f42455032303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104b9565b610a9f81604051806060016040528060228152602001610f38602291396001600160a01b0385166000908152600160205260409020549190610888565b6001600160a01b038316600090815260016020526040902055600354610ac59082610c9d565b600355600454610ad590826108b4565b60045560405181815261dead906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016109a1565b6001600160a01b038316610b7b5760405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104b9565b6001600160a01b038216610bdd5760405162461bcd60e51b815260206004820152602360248201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104b9565b610c1a81604051806060016040528060268152602001610eed602691396001600160a01b0386166000908152600160205260409020549190610888565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610c4990826108b4565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107769085815260200190565b60006108c08284610e5c565b80356001600160a01b0381168114610cc057600080fd5b919050565b600060208284031215610cd757600080fd5b6108c082610ca9565b60008060408385031215610cf357600080fd5b610cfc83610ca9565b9150610d0a60208401610ca9565b90509250929050565b600080600060608486031215610d2857600080fd5b610d3184610ca9565b9250610d3f60208501610ca9565b9150604084013590509250925092565b60008060408385031215610d6257600080fd5b610d6b83610ca9565b946020939093013593505050565b600060208083528351808285015260005b81811015610da657858101830151858201604001528201610d8a565b81811115610db8576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610e1657610e16610eae565b500190565b600082610e3857634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610e5757610e57610eae565b500290565b600082821015610e6e57610e6e610eae565b500390565b600181811c90821680610e8757607f821691505b60208210811415610ea857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365a2646970667358221220cff8ce5c1e396a68143a4fcd95fd527720682b580b0f2c255fd07599d26381fd64736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c8063893d20e8116100b8578063a457c2d71161007c578063a457c2d71461027f578063a9059cbb14610292578063b03e6478146102a5578063dd62ed3e146102ad578063f2fde38b146102e6578063fccc2813146102f957600080fd5b8063893d20e8146102405780638da5cb5b146102405780638f32d59b1461025157806395d89b41146102645780639dfd5f051461026c57600080fd5b8063313ce567116100ff578063313ce567146101d257806339509351146101e757806340c10f19146101fa57806370a082311461020f578063715018a61461023857600080fd5b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461017d57806323b872dd1461018f5780632ce39db1146101a2575b600080fd5b610144610302565b6040516101519190610d79565b60405180910390f35b61016d610168366004610d4f565b610394565b6040519015158152602001610151565b6003545b604051908152602001610151565b61016d61019d366004610d13565b6103aa565b6007546101ba9061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610151565b60075460405160ff9091168152602001610151565b61016d6101f5366004610d4f565b610413565b61020d610208366004610d4f565b610449565b005b61018161021d366004610cc5565b6001600160a01b031660009081526001602052604090205490565b61020d6104d0565b6000546001600160a01b03166101ba565b6000546001600160a01b0316331461016d565b610144610506565b61020d61027a366004610cc5565b610515565b61016d61028d366004610d4f565b610567565b61016d6102a0366004610d4f565b6105b6565b600454610181565b6101816102bb366004610ce0565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b61020d6102f4366004610cc5565b6105c3565b6101ba61dead81565b60606005805461031190610e73565b80601f016020809104026020016040519081016040528092919081815260200182805461033d90610e73565b801561038a5780601f1061035f5761010080835404028352916020019161038a565b820191906000526020600020905b81548152906001019060200180831161036d57829003601f168201915b5050505050905090565b60006103a133848461065e565b50600192915050565b60006103b7848484610783565b610409843361040485604051806060016040528060288152602001610ec5602891396001600160a01b038a1660009081526002602090815260408083203384529091529020549190610888565b61065e565b5060019392505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916103a191859061040490866108b4565b6000546001600160a01b0316331480610471575060075461010090046001600160a01b031633145b6104c25760405162461bcd60e51b815260206004820181905260248201527f63616c6c6572206973206e6f7420746865206f776e6572206f7220734e6f766160448201526064015b60405180910390fd5b6104cc82826108c7565b5050565b6000546001600160a01b031633146104fa5760405162461bcd60e51b81526004016104b990610dce565b61050460006109ad565b565b60606006805461031190610e73565b6000546001600160a01b0316331461053f5760405162461bcd60e51b81526004016104b990610dce565b600780546001600160a01b0390921661010002610100600160a81b0319909216919091179055565b60006103a1338461040485604051806060016040528060258152602001610f13602591393360009081526002602090815260408083206001600160a01b038d1684529091529020549190610888565b60006103a1338484610783565b6000546001600160a01b031633146105ed5760405162461bcd60e51b81526004016104b990610dce565b6001600160a01b0381166106525760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104b9565b61065b816109ad565b50565b6001600160a01b0383166106c05760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016104b9565b6001600160a01b0382166107215760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016104b9565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600081116107be5760405162461bcd60e51b81526020600482015260086024820152670616d6f756e7420360c41b60448201526064016104b9565b6001600160a01b03821661dead14156107e0576107db83826109fd565b505050565b600060646107ef836002610e3d565b6107f99190610e1b565b905060006108078284610e5c565b90506108138282610e03565b831461086c5760405162461bcd60e51b815260206004820152602260248201527f4e6f76613a3a7472616e736665723a204275726e2076616c756520696e76616c6044820152611a5960f21b60648201526084016104b9565b61087685836109fd565b610881858583610b17565b5050505050565b600081848411156108ac5760405162461bcd60e51b81526004016104b99190610d79565b505050900390565b60006108c08284610e03565b9392505050565b6001600160a01b03821661091d5760405162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016104b9565b60035461092a90826108b4565b6003556001600160a01b03821660009081526001602052604090205461095090826108b4565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906109a19085815260200190565b60405180910390a35050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03821661dead1415610a625760405162461bcd60e51b815260206004820152602160248201527f42455032303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016104b9565b610a9f81604051806060016040528060228152602001610f38602291396001600160a01b0385166000908152600160205260409020549190610888565b6001600160a01b038316600090815260016020526040902055600354610ac59082610c9d565b600355600454610ad590826108b4565b60045560405181815261dead906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016109a1565b6001600160a01b038316610b7b5760405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016104b9565b6001600160a01b038216610bdd5760405162461bcd60e51b815260206004820152602360248201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016104b9565b610c1a81604051806060016040528060268152602001610eed602691396001600160a01b0386166000908152600160205260409020549190610888565b6001600160a01b038085166000908152600160205260408082209390935590841681522054610c4990826108b4565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906107769085815260200190565b60006108c08284610e5c565b80356001600160a01b0381168114610cc057600080fd5b919050565b600060208284031215610cd757600080fd5b6108c082610ca9565b60008060408385031215610cf357600080fd5b610cfc83610ca9565b9150610d0a60208401610ca9565b90509250929050565b600080600060608486031215610d2857600080fd5b610d3184610ca9565b9250610d3f60208501610ca9565b9150604084013590509250925092565b60008060408385031215610d6257600080fd5b610d6b83610ca9565b946020939093013593505050565b600060208083528351808285015260005b81811015610da657858101830151858201604001528201610d8a565b81811115610db8576000604083870101525b50601f01601f1916929092016040019392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610e1657610e16610eae565b500190565b600082610e3857634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615610e5757610e57610eae565b500290565b600082821015610e6e57610e6e610eae565b500390565b600181811c90821680610e8757607f821691505b60208210811415610ea857634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365a2646970667358221220cff8ce5c1e396a68143a4fcd95fd527720682b580b0f2c255fd07599d26381fd64736f6c63430008070033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:396:24",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:24",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "69:325:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "79:22:24",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "93:1:24",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "96:4:24"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "89:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:12:24"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "79:6:24"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "110:38:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "140:4:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "146:1:24",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "136:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "136:12:24"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "114:18:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "187:31:24",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "189:27:24",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "203:6:24"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "211:4:24",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "199:3:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "199:17:24"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "189:6:24"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "167:18:24"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:26:24"
                  },
                  "nodeType": "YulIf",
                  "src": "157:61:24"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "277:111:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "298:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "305:3:24",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "310:10:24",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "301:3:24"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "301:20:24"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "291:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "291:31:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "291:31:24"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "342:1:24",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "345:4:24",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "335:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "335:15:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "335:15:24"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "370:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "373:4:24",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "363:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "363:15:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "363:15:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "233:18:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "264:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "253:2:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "253:14:24"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "230:2:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "230:38:24"
                  },
                  "nodeType": "YulIf",
                  "src": "227:161:24"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "49:4:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "58:6:24",
                "type": ""
              }
            ],
            "src": "14:380:24"
          }
        ]
      },
      "contents": "{\n    { }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 24,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8033:24",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:24",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:24"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:24"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:24"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:24",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:24",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:24"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:24",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:24"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:24"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:24"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:24"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:24"
                  },
                  "nodeType": "YulIf",
                  "src": "111:70:24"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:24",
                "type": ""
              }
            ],
            "src": "14:173:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:116:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "308:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "317:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "320:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "283:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "292:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "279:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "279:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "275:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "272:52:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "333:39:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "362:9:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "343:18:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "343:29:24"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "333:6:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "239:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "251:6:24",
                "type": ""
              }
            ],
            "src": "192:186:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "470:173:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "516:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "525:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "528:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "518:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "518:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "518:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "491:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "500:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "487:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "487:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "512:2:24",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "483:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "483:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "480:52:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "541:39:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "570:9:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "551:18:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "551:29:24"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "541:6:24"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "589:48:24",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "622:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "633:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "618:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "618:18:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "599:18:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "599:38:24"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "589:6:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "428:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "439:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "451:6:24",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "459:6:24",
                "type": ""
              }
            ],
            "src": "383:260:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "752:224:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "798:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "807:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "810:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "800:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "800:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "800:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "773:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "782:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "769:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "769:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "794:2:24",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "765:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "765:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "762:52:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "823:39:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "852:9:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "833:18:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "833:29:24"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "823:6:24"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "871:48:24",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "904:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "915:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "900:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "900:18:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "881:18:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "881:38:24"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "871:6:24"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "928:42:24",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "955:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "966:2:24",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "951:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "951:18:24"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "938:12:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "938:32:24"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "928:6:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "702:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "713:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "725:6:24",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "733:6:24",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "741:6:24",
                "type": ""
              }
            ],
            "src": "648:328:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1068:167:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1114:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1123:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1126:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1116:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1116:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1116:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1089:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1098:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1085:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1085:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1110:2:24",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1081:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1081:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "1078:52:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1139:39:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1168:9:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1149:18:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1149:29:24"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1139:6:24"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1187:42:24",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1214:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1225:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1210:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1210:18:24"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1197:12:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1197:32:24"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1187:6:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1026:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1037:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1049:6:24",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1057:6:24",
                "type": ""
              }
            ],
            "src": "981:254:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1341:102:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1351:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1363:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1374:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1359:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1359:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1351:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1393:9:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1408:6:24"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1424:3:24",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1429:1:24",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1420:3:24"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1420:11:24"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1433:1:24",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1416:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1416:19:24"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1404:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1404:32:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1386:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1386:51:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1386:51:24"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1310:9:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1321:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1332:4:24",
                "type": ""
              }
            ],
            "src": "1240:203:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1543:92:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1553:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1565:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1576:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1561:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1561:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1553:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1595:9:24"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1620:6:24"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1613:6:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1613:14:24"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1606:6:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1606:22:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1588:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1588:41:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1588:41:24"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1512:9:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1523:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1534:4:24",
                "type": ""
              }
            ],
            "src": "1448:187:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1761:476:24",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1771:12:24",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1781:2:24",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1775:2:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1799:9:24"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1810:2:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1792:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1792:21:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1792:21:24"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1822:27:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1842:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1836:5:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1836:13:24"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1826:6:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1869:9:24"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1880:2:24"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1865:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1865:18:24"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1885:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1858:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1858:34:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1858:34:24"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1901:10:24",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1910:1:24",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1905:1:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1970:90:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "1999:9:24"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2010:1:24"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1995:3:24"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1995:17:24"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2014:2:24",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1991:3:24"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1991:26:24"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2033:6:24"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2041:1:24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2029:3:24"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2029:14:24"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2045:2:24"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2025:3:24"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2025:23:24"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2019:5:24"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2019:30:24"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1984:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1984:66:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1984:66:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1931:1:24"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1934:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1928:2:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1928:13:24"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1942:19:24",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1944:15:24",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1953:1:24"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "1956:2:24"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1949:3:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1949:10:24"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1944:1:24"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1924:3:24",
                    "statements": []
                  },
                  "src": "1920:140:24"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2094:66:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "2123:9:24"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "2134:6:24"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2119:3:24"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2119:22:24"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2143:2:24",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2115:3:24"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2115:31:24"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2148:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2108:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2108:42:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2108:42:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2075:1:24"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2078:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2072:2:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2072:13:24"
                  },
                  "nodeType": "YulIf",
                  "src": "2069:91:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2169:62:24",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2185:9:24"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2204:6:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2212:2:24",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2200:3:24"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2200:15:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2221:2:24",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2217:3:24"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2217:7:24"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2196:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2196:29:24"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2181:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2181:45:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2228:2:24",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2177:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2177:54:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2169:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1730:9:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1741:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1752:4:24",
                "type": ""
              }
            ],
            "src": "1640:597:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2416:227:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2433:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2444:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2426:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2426:21:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2426:21:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2467:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2478:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2463:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2463:18:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2483:2:24",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2456:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2456:30:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2456:30:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2506:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2517:2:24",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2502:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2502:18:24"
                      },
                      {
                        "hexValue": "42455032303a207472616e736665722066726f6d20746865207a65726f206164",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2522:34:24",
                        "type": "",
                        "value": "BEP20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2495:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2495:62:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2495:62:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2577:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2588:2:24",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2573:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2573:18:24"
                      },
                      {
                        "hexValue": "6472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2593:7:24",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2566:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2566:35:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2566:35:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2610:27:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2622:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2633:3:24",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2618:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2618:19:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2610:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2393:9:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2407:4:24",
                "type": ""
              }
            ],
            "src": "2242:401:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2822:226:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2839:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2850:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2832:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2832:21:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2832:21:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2873:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2884:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2869:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2869:18:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2889:2:24",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2862:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2862:30:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2862:30:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2912:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2923:2:24",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2908:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2908:18:24"
                      },
                      {
                        "hexValue": "42455032303a20617070726f76652066726f6d20746865207a65726f20616464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2928:34:24",
                        "type": "",
                        "value": "BEP20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2901:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2901:62:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2901:62:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2983:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2994:2:24",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2979:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2979:18:24"
                      },
                      {
                        "hexValue": "72657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2999:6:24",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2972:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2972:34:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2972:34:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3015:27:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3027:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3038:3:24",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3023:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3023:19:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3015:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2799:9:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2813:4:24",
                "type": ""
              }
            ],
            "src": "2648:400:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3227:228:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3244:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3255:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3237:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3237:21:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3237:21:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3278:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3289:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3274:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3274:18:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3294:2:24",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3267:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3267:30:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3267:30:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3317:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3328:2:24",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3313:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3313:18:24"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3333:34:24",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3306:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3306:62:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3306:62:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3388:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3399:2:24",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3384:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3384:18:24"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3404:8:24",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3377:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3377:36:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3377:36:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3422:27:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3434:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3445:3:24",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3430:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3430:19:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3422:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3204:9:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3218:4:24",
                "type": ""
              }
            ],
            "src": "3053:402:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3634:224:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3651:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3662:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3644:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3644:21:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3644:21:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3685:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3696:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3681:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3681:18:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3701:2:24",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3674:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3674:30:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3674:30:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3724:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3735:2:24",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3720:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3720:18:24"
                      },
                      {
                        "hexValue": "4e6f76613a3a7472616e736665723a204275726e2076616c756520696e76616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3740:34:24",
                        "type": "",
                        "value": "Nova::transfer: Burn value inval"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3713:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3713:62:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3713:62:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3795:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3806:2:24",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3791:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3791:18:24"
                      },
                      {
                        "hexValue": "6964",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3811:4:24",
                        "type": "",
                        "value": "id"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3784:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3784:32:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3784:32:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3825:27:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3837:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3848:3:24",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3833:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3833:19:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3825:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5fe528bdccd3636f08bf3818ed6bb8ffc861cbc53939150f5c6fcaf21e8516f9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3611:9:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3625:4:24",
                "type": ""
              }
            ],
            "src": "3460:398:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4037:181:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4054:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4065:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4047:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4047:21:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4047:21:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4088:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4099:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4084:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4084:18:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4104:2:24",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4077:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4077:30:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4077:30:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4127:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4138:2:24",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4123:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4123:18:24"
                      },
                      {
                        "hexValue": "42455032303a206d696e7420746f20746865207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4143:33:24",
                        "type": "",
                        "value": "BEP20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4116:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4116:61:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4116:61:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4186:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4198:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4209:2:24",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4194:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4194:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4186:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4014:9:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4028:4:24",
                "type": ""
              }
            ],
            "src": "3863:355:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4397:182:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4414:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4425:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4407:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4407:21:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4407:21:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4448:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4459:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4444:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4444:18:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4464:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4437:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4437:30:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4437:30:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4487:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4498:2:24",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4483:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4483:18:24"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4503:34:24",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4476:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4476:62:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4476:62:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4547:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4559:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4570:2:24",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4555:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4555:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4547:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4374:9:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4388:4:24",
                "type": ""
              }
            ],
            "src": "4223:356:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4758:157:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4775:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4786:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4768:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4768:21:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4768:21:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4809:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4820:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4805:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4805:18:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4825:1:24",
                        "type": "",
                        "value": "8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4798:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4798:29:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4798:29:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4847:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4858:2:24",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4843:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4843:18:24"
                      },
                      {
                        "hexValue": "616d6f756e742030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4863:10:24",
                        "type": "",
                        "value": "amount 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4836:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4836:38:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4836:38:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4883:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4895:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4906:2:24",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4891:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4891:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4883:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_aa0c75600cc81ac69d9358030c40cab76c7291229be6a13e3d364c52d7ae813b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4735:9:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4749:4:24",
                "type": ""
              }
            ],
            "src": "4584:331:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5094:225:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5111:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5122:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5104:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5104:21:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5104:21:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5145:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5156:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5141:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5141:18:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5161:2:24",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5134:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5134:30:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5134:30:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5184:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5195:2:24",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5180:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5180:18:24"
                      },
                      {
                        "hexValue": "42455032303a207472616e7366657220746f20746865207a65726f2061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5200:34:24",
                        "type": "",
                        "value": "BEP20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5173:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5173:62:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5173:62:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5255:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5266:2:24",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5251:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5251:18:24"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5271:5:24",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5244:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5244:33:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5244:33:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5286:27:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5298:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5309:3:24",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5294:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5294:19:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5286:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5071:9:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5085:4:24",
                "type": ""
              }
            ],
            "src": "4920:399:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5498:223:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5515:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5526:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5508:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5508:21:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5508:21:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5549:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5560:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5545:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5545:18:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5565:2:24",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5538:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5538:30:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5538:30:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5588:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5599:2:24",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5584:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5584:18:24"
                      },
                      {
                        "hexValue": "42455032303a206275726e2066726f6d20746865207a65726f20616464726573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5604:34:24",
                        "type": "",
                        "value": "BEP20: burn from the zero addres"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5577:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5577:62:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5577:62:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5659:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5670:2:24",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5655:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5655:18:24"
                      },
                      {
                        "hexValue": "73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5675:3:24",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5648:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5648:31:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5648:31:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5688:27:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5700:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5711:3:24",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5696:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5696:19:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5688:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5475:9:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5489:4:24",
                "type": ""
              }
            ],
            "src": "5324:397:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5900:182:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5917:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5928:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5910:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5910:21:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5910:21:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5951:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5962:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5947:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5947:18:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5967:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5940:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5940:30:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5940:30:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5990:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6001:2:24",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5986:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5986:18:24"
                      },
                      {
                        "hexValue": "63616c6c6572206973206e6f7420746865206f776e6572206f7220734e6f7661",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6006:34:24",
                        "type": "",
                        "value": "caller is not the owner or sNova"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5979:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5979:62:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5979:62:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6050:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6062:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6073:2:24",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6058:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6058:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6050:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c5583e28ebcff72a8cebca023463673e9f156021121ebb50cf259c52a58a6e87__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5877:9:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5891:4:24",
                "type": ""
              }
            ],
            "src": "5726:356:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6261:224:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6278:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6289:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6271:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6271:21:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6271:21:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6312:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6323:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6308:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6308:18:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6328:2:24",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6301:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6301:30:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6301:30:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6351:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6362:2:24",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6347:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6347:18:24"
                      },
                      {
                        "hexValue": "42455032303a20617070726f766520746f20746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6367:34:24",
                        "type": "",
                        "value": "BEP20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6340:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6340:62:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6340:62:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6422:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6433:2:24",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6418:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6418:18:24"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6438:4:24",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6411:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6411:32:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6411:32:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6452:27:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6464:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6475:3:24",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6460:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6460:19:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6452:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6238:9:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6252:4:24",
                "type": ""
              }
            ],
            "src": "6087:398:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6591:76:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6601:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6613:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6624:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6609:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6609:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6601:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6643:9:24"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6654:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6636:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6636:25:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6636:25:24"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6560:9:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6571:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6582:4:24",
                "type": ""
              }
            ],
            "src": "6490:177:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6769:87:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6779:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6791:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6802:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6787:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6787:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6779:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6821:9:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6836:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6844:4:24",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6832:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6832:17:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6814:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6814:36:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6814:36:24"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6738:9:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6749:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6760:4:24",
                "type": ""
              }
            ],
            "src": "6672:184:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6909:80:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6936:22:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6938:16:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6938:18:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6938:18:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6925:1:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "6932:1:24"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "6928:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6928:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6922:2:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6922:13:24"
                  },
                  "nodeType": "YulIf",
                  "src": "6919:39:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6967:16:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6978:1:24"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6981:1:24"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6974:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6974:9:24"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "6967:3:24"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6892:1:24",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6895:1:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "6901:3:24",
                "type": ""
              }
            ],
            "src": "6861:128:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7040:171:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7071:111:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7092:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7099:3:24",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7104:10:24",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "7095:3:24"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7095:20:24"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7085:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7085:31:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7085:31:24"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7136:1:24",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7139:4:24",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7129:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7129:15:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7129:15:24"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7164:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7167:4:24",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7157:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7157:15:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7157:15:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7060:1:24"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7053:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7053:9:24"
                  },
                  "nodeType": "YulIf",
                  "src": "7050:132:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7191:14:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7200:1:24"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7203:1:24"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "7196:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7196:9:24"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "7191:1:24"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7025:1:24",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7028:1:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "7034:1:24",
                "type": ""
              }
            ],
            "src": "6994:217:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7268:116:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7327:22:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7329:16:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7329:18:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7329:18:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7299:1:24"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7292:6:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7292:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7285:6:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7285:17:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7307:1:24"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7318:1:24",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "7314:3:24"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7314:6:24"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7322:1:24"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "7310:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7310:14:24"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7304:2:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7304:21:24"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7281:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7281:45:24"
                  },
                  "nodeType": "YulIf",
                  "src": "7278:71:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7358:20:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7373:1:24"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7376:1:24"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "7369:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7369:9:24"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "7358:7:24"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7247:1:24",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7250:1:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "7256:7:24",
                "type": ""
              }
            ],
            "src": "7216:168:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7438:76:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7460:22:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7462:16:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7462:18:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7462:18:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7454:1:24"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7457:1:24"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7451:2:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7451:8:24"
                  },
                  "nodeType": "YulIf",
                  "src": "7448:34:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7491:17:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7503:1:24"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7506:1:24"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7499:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7499:9:24"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "7491:4:24"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7420:1:24",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7423:1:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "7429:4:24",
                "type": ""
              }
            ],
            "src": "7389:125:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7574:325:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7584:22:24",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7598:1:24",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "7601:4:24"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "7594:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7594:12:24"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "7584:6:24"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7615:38:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "7645:4:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7651:1:24",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7641:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7641:12:24"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "7619:18:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7692:31:24",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7694:27:24",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "7708:6:24"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7716:4:24",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "7704:3:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7704:17:24"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7694:6:24"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7672:18:24"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "7665:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7665:26:24"
                  },
                  "nodeType": "YulIf",
                  "src": "7662:61:24"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7782:111:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7803:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7810:3:24",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "7815:10:24",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "7806:3:24"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7806:20:24"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7796:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7796:31:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7796:31:24"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7847:1:24",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7850:4:24",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7840:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7840:15:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7840:15:24"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7875:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7878:4:24",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7868:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7868:15:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7868:15:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "7738:18:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "7761:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7769:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "7758:2:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7758:14:24"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "7735:2:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7735:38:24"
                  },
                  "nodeType": "YulIf",
                  "src": "7732:161:24"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "7554:4:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7563:6:24",
                "type": ""
              }
            ],
            "src": "7519:380:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7936:95:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7953:1:24",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7960:3:24",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7965:10:24",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7956:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7956:20:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7946:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7946:31:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7946:31:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7993:1:24",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7996:4:24",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7986:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7986:15:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7986:15:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8017:1:24",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8020:4:24",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "8010:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8010:15:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8010:15:24"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "7904:127:24"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0d26cf302d50b28de74be656b11d67092b32131e5712d1bcf08c4e976dacda57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"BEP20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_1441cfbef485de93bedecc35b3d10fa2992db382c4c9c583a6e423a140abe4a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"BEP20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5fe528bdccd3636f08bf3818ed6bb8ffc861cbc53939150f5c6fcaf21e8516f9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Nova::transfer: Burn value inval\")\n        mstore(add(headStart, 96), \"id\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9865f573770ea57d1686e7914cb6526cbb139a36ffdd4bab8d4db350bbc932b3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"BEP20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_aa0c75600cc81ac69d9358030c40cab76c7291229be6a13e3d364c52d7ae813b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 8)\n        mstore(add(headStart, 64), \"amount 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ade9efcb59e42e439ffe61509b352b1af56d64ccb68d80b039b7b69578f371d2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"BEP20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b81edbf10508d9b81724f18ff8f3d8bfba9790734ce1f1c54dfe1030b4914855__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"BEP20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c5583e28ebcff72a8cebca023463673e9f156021121ebb50cf259c52a58a6e87__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"caller is not the owner or sNova\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f10e7571e18b354270dee950932fb6a745efc79414b2b2556185a4ed6a1af0d5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"BEP20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
      "id": 24,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "97:1783:11:-:0;;;;;;;;;;;;;1339:144:23;;;;;;;;;;;;;-1:-1:-1;;;1339:144:23;;;;;;;;;;;;;;;;-1:-1:-1;;;1339:144:23;;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;1411:12:23;;;;:5;;:12;;;;;:::i;:::-;-1:-1:-1;1434:16:23;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;;1461:9:23;:14;;-1:-1:-1;;1461:14:23;1473:2;1461:14;;;-1:-1:-1;97:1783:11;;640:96:3;719:10;;640:96::o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;97:1783:11:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;97:1783:11;;;-1:-1:-1;97:1783:11;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:24;93:1;89:12;;;;136;;;157:61;;211:4;203:6;199:17;189:27;;157:61;264:2;256:6;253:14;233:18;230:38;227:161;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:161;;14:380;;;:::o;:::-;97:1783:11;;;;;;",
  "deployedSourceMap": "97:1783:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1708:92:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3348:161;;;;;;:::i;:::-;;:::i;:::-;;;1613:14:24;;1606:22;1588:41;;1576:2;1561:18;3348:161:23;1448:187:24;2184:100:23;2264:12;;2184:100;;;6636:25:24;;;6624:2;6609:18;2184:100:23;6490:177:24;3980:397:23;;;;;;:::i;:::-;;:::i;161:20:11:-;;;;;;;;-1:-1:-1;;;;;161:20:11;;;;;;-1:-1:-1;;;;;1404:32:24;;;1386:51;;1374:2;1359:18;161:20:11;1240:203:24;1867:92:23;1942:9;;1867:92;;1942:9;;;;6814:36:24;;6802:2;6787:18;1867:92:23;6672:184:24;4785:210:23;;;;;;:::i;:::-;;:::i;979:126:11:-;;;;;;:::i;:::-;;:::i;:::-;;2499:119:23;;;;;;:::i;:::-;-1:-1:-1;;;;;2592:18:23;2565:7;2592:18;;;:9;:18;;;;;;;2499:119;1668:101:0;;;:::i;1551:94:23:-;1603:7;1108:6:0;-1:-1:-1;;;;;1108:6:0;1551:94:23;;496:93:11;536:4;1108:6:0;-1:-1:-1;;;;;1108:6:0;560:10:11;:21;496:93;;2024:96:23;;;:::i;785:87:11:-;;;;;;:::i;:::-;;:::i;5497:311:23:-;;;;;;:::i;:::-;;:::i;2830:167::-;;;;;;:::i;:::-;;:::i;2348:89::-;2418:11;;2348:89;;3059:143;;;;;;:::i;:::-;-1:-1:-1;;;;;3167:18:23;;;3140:7;3167:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3059:143;1918:198:0;;;;;;:::i;:::-;;:::i;635:81:23:-;;674:42;635:81;;1708:92;1754:13;1787:5;1780:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1708:92;:::o;3348:161::-;3423:4;3440:39;719:10:3;3463:7:23;3472:6;3440:8;:39::i;:::-;-1:-1:-1;3497:4:23;3348:161;;;;:::o;3980:397::-;4112:4;4129:36;4139:6;4147:9;4158:6;4129:9;:36::i;:::-;4176:171;4199:6;719:10:3;4247:89:23;4285:6;4247:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4247:19:23;;;;;;:11;:19;;;;;;;;719:10:3;4247:33:23;;;;;;;;;;:37;:89::i;:::-;4176:8;:171::i;:::-;-1:-1:-1;4365:4:23;3980:397;;;;;:::o;4785:210::-;719:10:3;4865:4:23;4914:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;4914:34:23;;;;;;;;;;4865:4;;4882:83;;4905:7;;4914:50;;4953:10;4914:38;:50::i;979:126:11:-;536:4;1108:6:0;-1:-1:-1;;;;;1108:6:0;560:10:11;:21;329:22;;;-1:-1:-1;763:5:11;;;;;-1:-1:-1;;;;;763:5:11;741:10;:28;342:9;321:67;;;;-1:-1:-1;;;321:67:11;;5928:2:24;321:67:11;;;5910:21:24;;;5947:18;;;5940:30;6006:34;5986:18;;;5979:62;6058:18;;321:67:11;;;;;;;;;1078:19:::1;1084:3;1089:7;1078:5;:19::i;:::-;979:126:::0;;:::o;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;2024:96:23:-;2072:13;2105:7;2098:14;;;;;:::i;785:87:11:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;850:5:11::1;:14:::0;;-1:-1:-1;;;;;850:14:11;;::::1;;;-1:-1:-1::0;;;;;;850:14:11;;::::1;::::0;;;::::1;::::0;;785:87::o;5497:311:23:-;5582:4;5599:179;719:10:3;5649:7:23;5671:96;5710:15;5671:96;;;;;;;;;;;;;;;;;719:10:3;5671:25:23;;;;:11;:25;;;;;;;;-1:-1:-1;;;;;5671:34:23;;;;;;;;;;;;:38;:96::i;2830:167::-;2908:4;2925:42;719:10:3;2949:9:23;2960:6;2925:9;:42::i;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:3;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;3255:2:24;1998:73:0::1;::::0;::::1;3237:21:24::0;3294:2;3274:18;;;3267:30;3333:34;3313:18;;;3306:62;-1:-1:-1;;;3384:18:24;;;3377:36;3430:19;;1998:73:0::1;3053:402:24::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;8686:372:23:-;-1:-1:-1;;;;;8814:19:23;;8806:68;;;;-1:-1:-1;;;8806:68:23;;2850:2:24;8806:68:23;;;2832:21:24;2889:2;2869:18;;;2862:30;2928:34;2908:18;;;2901:62;-1:-1:-1;;;2979:18:24;;;2972:34;3023:19;;8806:68:23;2648:400:24;8806:68:23;-1:-1:-1;;;;;8893:21:23;;8885:68;;;;-1:-1:-1;;;8885:68:23;;6289:2:24;8885:68:23;;;6271:21:24;6328:2;6308:18;;;6301:30;6367:34;6347:18;;;6340:62;-1:-1:-1;;;6418:18:24;;;6411:32;6460:19;;8885:68:23;6087:398:24;8885:68:23;-1:-1:-1;;;;;8966:18:23;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9018:32;;6636:25:24;;;9018:32:23;;6609:18:24;9018:32:23;;;;;;;;8686:372;;;:::o;1184:691:11:-;1308:1;1299:6;:10;1291:31;;;;-1:-1:-1;;;1291:31:11;;4786:2:24;1291:31:11;;;4768:21:24;4825:1;4805:18;;;4798:29;-1:-1:-1;;;4843:18:24;;;4836:38;4891:18;;1291:31:11;4584:331:24;1291:31:11;-1:-1:-1;;;;;1337:25:11;;674:42:23;1337:25:11;1333:535;;;1379:27;1391:6;1399;1379:11;:27::i;:::-;1184:691;;;:::o;1333:535::-;1482:18;1512:3;1503:8;:6;1510:1;1503:8;:::i;:::-;:12;;;;:::i;:::-;1482:33;-1:-1:-1;1580:18:11;1601:17;1482:33;1601:6;:17;:::i;:::-;1580:38;-1:-1:-1;1651:23:11;1664:10;1580:38;1651:23;:::i;:::-;1641:6;:33;1633:80;;;;-1:-1:-1;;;1633:80:11;;3662:2:24;1633:80:11;;;3644:21:24;3701:2;3681:18;;;3674:30;3740:34;3720:18;;;3713:62;-1:-1:-1;;;3791:18:24;;;3784:32;3833:19;;1633:80:11;3460:398:24;1633:80:11;1730:31;1742:6;1750:10;1730:11;:31::i;:::-;1776:46;1792:6;1800:9;1811:10;1776:15;:46::i;:::-;-1:-1:-1;;;;;1184:691:11:o;4945:231:4:-;5061:7;5120:12;5112:6;;;;5104:29;;;;-1:-1:-1;;;5104:29:4;;;;;;;;:::i;:::-;-1:-1:-1;;;5154:5:4;;;4945:231::o;2741:96::-;2799:7;2825:5;2829:1;2825;:5;:::i;:::-;2818:12;2741:96;-1:-1:-1;;;2741:96:4:o;7206:308:23:-;-1:-1:-1;;;;;7282:21:23;;7274:65;;;;-1:-1:-1;;;7274:65:23;;4065:2:24;7274:65:23;;;4047:21:24;4104:2;4084:18;;;4077:30;4143:33;4123:18;;;4116:61;4194:18;;7274:65:23;3863:355:24;7274:65:23;7367:12;;:24;;7384:6;7367:16;:24::i;:::-;7352:12;:39;-1:-1:-1;;;;;7423:18:23;;;;;;:9;:18;;;;;;:30;;7446:6;7423:22;:30::i;:::-;-1:-1:-1;;;;;7402:18:23;;;;;;:9;:18;;;;;;:51;;;;7469:37;;7402:18;;;7469:37;;;;7499:6;6636:25:24;;6624:2;6609:18;;6490:177;7469:37:23;;;;;;;;7206:308;;:::o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;7846:400:23:-;-1:-1:-1;;;;;7922:23:23;;674:42;7922:23;;7914:69;;;;-1:-1:-1;;;7914:69:23;;5526:2:24;7914:69:23;;;5508:21:24;5565:2;5545:18;;;5538:30;5604:34;5584:18;;;5577:62;-1:-1:-1;;;5655:18:24;;;5648:31;5696:19;;7914:69:23;5324:397:24;7914:69:23;8017:68;8040:6;8017:68;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8017:18:23;;;;;;:9;:18;;;;;;;:68;:22;:68::i;:::-;-1:-1:-1;;;;;7996:18:23;;;;;;:9;:18;;;;;:89;8111:12;;:24;;8128:6;8111:16;:24::i;:::-;8096:12;:39;8160:11;;:23;;8176:6;8160:15;:23::i;:::-;8146:11;:37;8199:39;;6636:25:24;;;674:42:23;;-1:-1:-1;;;;;8199:39:23;;;;;6624:2:24;6609:18;8199:39:23;6490:177:24;6298:513:23;-1:-1:-1;;;;;6438:20:23;;6430:70;;;;-1:-1:-1;;;6430:70:23;;2444:2:24;6430:70:23;;;2426:21:24;2483:2;2463:18;;;2456:30;2522:34;2502:18;;;2495:62;-1:-1:-1;;;2573:18:24;;;2566:35;2618:19;;6430:70:23;2242:401:24;6430:70:23;-1:-1:-1;;;;;6519:23:23;;6511:71;;;;-1:-1:-1;;;6511:71:23;;5122:2:24;6511:71:23;;;5104:21:24;5161:2;5141:18;;;5134:30;5200:34;5180:18;;;5173:62;-1:-1:-1;;;5251:18:24;;;5244:33;5294:19;;6511:71:23;4920:399:24;6511:71:23;6615;6637:6;6615:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6615:17:23;;;;;;:9;:17;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;6595:17:23;;;;;;;:9;:17;;;;;;:91;;;;6720:20;;;;;;;:32;;6745:6;6720:24;:32::i;:::-;-1:-1:-1;;;;;6697:20:23;;;;;;;:9;:20;;;;;;;:55;;;;6768:35;;;;;;;;;;6796:6;6636:25:24;;6624:2;6609:18;;6490:177;3108:96:4;3166:7;3192:5;3196:1;3192;:5;:::i;14:173:24:-;82:20;;-1:-1:-1;;;;;131:31:24;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:52;;;528:1;525;518:12;480:52;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;383:260;;;;;:::o;648:328::-;725:6;733;741;794:2;782:9;773:7;769:23;765:32;762:52;;;810:1;807;800:12;762:52;833:29;852:9;833:29;:::i;:::-;823:39;;881:38;915:2;904:9;900:18;881:38;:::i;:::-;871:48;;966:2;955:9;951:18;938:32;928:42;;648:328;;;;;:::o;981:254::-;1049:6;1057;1110:2;1098:9;1089:7;1085:23;1081:32;1078:52;;;1126:1;1123;1116:12;1078:52;1149:29;1168:9;1149:29;:::i;:::-;1139:39;1225:2;1210:18;;;;1197:32;;-1:-1:-1;;;981:254:24:o;1640:597::-;1752:4;1781:2;1810;1799:9;1792:21;1842:6;1836:13;1885:6;1880:2;1869:9;1865:18;1858:34;1910:1;1920:140;1934:6;1931:1;1928:13;1920:140;;;2029:14;;;2025:23;;2019:30;1995:17;;;2014:2;1991:26;1984:66;1949:10;;1920:140;;;2078:6;2075:1;2072:13;2069:91;;;2148:1;2143:2;2134:6;2123:9;2119:22;2115:31;2108:42;2069:91;-1:-1:-1;2221:2:24;2200:15;-1:-1:-1;;2196:29:24;2181:45;;;;2228:2;2177:54;;1640:597;-1:-1:-1;;;1640:597:24:o;4223:356::-;4425:2;4407:21;;;4444:18;;;4437:30;4503:34;4498:2;4483:18;;4476:62;4570:2;4555:18;;4223:356::o;6861:128::-;6901:3;6932:1;6928:6;6925:1;6922:13;6919:39;;;6938:18;;:::i;:::-;-1:-1:-1;6974:9:24;;6861:128::o;6994:217::-;7034:1;7060;7050:132;;7104:10;7099:3;7095:20;7092:1;7085:31;7139:4;7136:1;7129:15;7167:4;7164:1;7157:15;7050:132;-1:-1:-1;7196:9:24;;6994:217::o;7216:168::-;7256:7;7322:1;7318;7314:6;7310:14;7307:1;7304:21;7299:1;7292:9;7285:17;7281:45;7278:71;;;7329:18;;:::i;:::-;-1:-1:-1;7369:9:24;;7216:168::o;7389:125::-;7429:4;7457:1;7454;7451:8;7448:34;;;7462:18;;:::i;:::-;-1:-1:-1;7499:9:24;;7389:125::o;7519:380::-;7598:1;7594:12;;;;7641;;;7662:61;;7716:4;7708:6;7704:17;7694:27;;7662:61;7769:2;7761:6;7758:14;7738:18;7735:38;7732:161;;;7815:10;7810:3;7806:20;7803:1;7796:31;7850:4;7847:1;7840:15;7878:4;7875:1;7868:15;7732:161;;7519:380;;;:::o;7904:127::-;7965:10;7960:3;7956:20;7953:1;7946:31;7996:4;7993:1;7986:15;8020:4;8017:1;8010:15",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.7;\r\n\r\nimport \"./libs/ShibaBEP20.sol\";\r\n\r\ncontract NovaToken is ShibaBEP20(\"ShibaNOVA \", \"NOVA\") {\r\n\r\n    address public sNova;\r\n\r\n    /*\r\n     * @dev Throws if called by any account other than the owner or sNova\r\n     */\r\n    modifier onlyOwnerOrSNova() {\r\n        require(isOwner() || isSNova(), \"caller is not the owner or sNova\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the caller is the current owner.\r\n     */\r\n    function isOwner() public view returns (bool) {\r\n        return msg.sender == owner();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the caller is sNova contracts.\r\n     */\r\n    function isSNova() internal view returns (bool) {\r\n        return msg.sender == address(sNova);\r\n    }\r\n\r\n    function setupSNova(address _sNova) external onlyOwner{\r\n        sNova = _sNova;\r\n    }\r\n\r\n    /// @notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterShiba).\r\n    function mint(address _to, uint256 _amount) external virtual override onlyOwnerOrSNova  {\r\n        _mint(_to, _amount);\r\n    }\r\n\r\n\r\n    /// @dev overrides transfer function to meet tokenomics of Nova\r\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual override {\r\n        require(amount > 0, \"amount 0\");\r\n        if (recipient == BURN_ADDRESS) {\r\n            super._burn(sender, amount);\r\n        } else {\r\n            // 2% of every transfer burnt\r\n            uint256 burnAmount = amount*2/100;\r\n            // 98% of transfer sent to recipient\r\n            uint256 sendAmount = amount-burnAmount;\r\n            require(amount == sendAmount + burnAmount, \"Nova::transfer: Burn value invalid\");\r\n\r\n            super._burn(sender, burnAmount);\r\n            super._transfer(sender, recipient, sendAmount);\r\n            amount = sendAmount;\r\n        }\r\n    }\r\n\r\n}",
  "sourcePath": "D:\\repos\\Novaria\\contracts\\NovaToken.sol",
  "ast": {
    "absolutePath": "project:/contracts/NovaToken.sol",
    "exportedSymbols": {
      "Address": [
        479
      ],
      "Context": [
        501
      ],
      "IBEP20": [
        11157
      ],
      "NovaToken": [
        10516
      ],
      "Ownable": [
        104
      ],
      "SafeMath": [
        813
      ],
      "ShibaBEP20": [
        12469
      ]
    },
    "id": 10517,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10364,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:11"
      },
      {
        "absolutePath": "project:/contracts/libs/ShibaBEP20.sol",
        "file": "./libs/ShibaBEP20.sol",
        "id": 10365,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10517,
        "sourceUnit": 12470,
        "src": "62:31:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "53686962614e4f564120",
                "id": 10367,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "130:12:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_4b54363f53ee3b97f1de5ff7f850e64fa7d038bf1d632b8a1bf10280f7ea0595",
                  "typeString": "literal_string \"ShibaNOVA \""
                },
                "value": "ShibaNOVA "
              },
              {
                "hexValue": "4e4f5641",
                "id": 10368,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "144:6:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_6c815368d22c13cd70e1de11ebe86229e240e018e6583c59946d468748640306",
                  "typeString": "literal_string \"NOVA\""
                },
                "value": "NOVA"
              }
            ],
            "baseName": {
              "id": 10366,
              "name": "ShibaBEP20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12469,
              "src": "119:10:11"
            },
            "id": 10369,
            "nodeType": "InheritanceSpecifier",
            "src": "119:32:11"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10516,
        "linearizedBaseContracts": [
          10516,
          12469,
          104,
          11157,
          501
        ],
        "name": "NovaToken",
        "nameLocation": "106:9:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "2ce39db1",
            "id": 10371,
            "mutability": "mutable",
            "name": "sNova",
            "nameLocation": "176:5:11",
            "nodeType": "VariableDeclaration",
            "scope": 10516,
            "src": "161:20:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10370,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "161:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 10383,
              "nodeType": "Block",
              "src": "310:98:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 10374,
                            "name": "isOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10397,
                            "src": "329:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 10375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "329:9:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 10376,
                            "name": "isSNova",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10412,
                            "src": "342:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 10377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "342:9:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "329:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206973206e6f7420746865206f776e6572206f7220734e6f7661",
                        "id": 10379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "353:34:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5583e28ebcff72a8cebca023463673e9f156021121ebb50cf259c52a58a6e87",
                          "typeString": "literal_string \"caller is not the owner or sNova\""
                        },
                        "value": "caller is not the owner or sNova"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5583e28ebcff72a8cebca023463673e9f156021121ebb50cf259c52a58a6e87",
                          "typeString": "literal_string \"caller is not the owner or sNova\""
                        }
                      ],
                      "id": 10373,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "321:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "321:67:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10381,
                  "nodeType": "ExpressionStatement",
                  "src": "321:67:11"
                },
                {
                  "id": 10382,
                  "nodeType": "PlaceholderStatement",
                  "src": "399:1:11"
                }
              ]
            },
            "id": 10384,
            "name": "onlyOwnerOrSNova",
            "nameLocation": "291:16:11",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 10372,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "307:2:11"
            },
            "src": "282:126:11",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10396,
              "nodeType": "Block",
              "src": "542:47:11",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 10394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10390,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "560:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 10391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "560:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 10392,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "574:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 10393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "574:7:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "560:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10389,
                  "id": 10395,
                  "nodeType": "Return",
                  "src": "553:28:11"
                }
              ]
            },
            "documentation": {
              "id": 10385,
              "nodeType": "StructuredDocumentation",
              "src": "416:74:11",
              "text": " @dev Returns true if the caller is the current owner."
            },
            "functionSelector": "8f32d59b",
            "id": 10397,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOwner",
            "nameLocation": "505:7:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "512:2:11"
            },
            "returnParameters": {
              "id": 10389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10388,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10397,
                  "src": "536:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10387,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "536:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "535:6:11"
            },
            "scope": 10516,
            "src": "496:93:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10411,
              "nodeType": "Block",
              "src": "723:54:11",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 10409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10403,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "741:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 10404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "741:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 10407,
                          "name": "sNova",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10371,
                          "src": "763:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 10406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "755:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10405,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "755:7:11",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "755:14:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "741:28:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10402,
                  "id": 10410,
                  "nodeType": "Return",
                  "src": "734:35:11"
                }
              ]
            },
            "documentation": {
              "id": 10398,
              "nodeType": "StructuredDocumentation",
              "src": "597:72:11",
              "text": " @dev Returns true if the caller is sNova contracts."
            },
            "id": 10412,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isSNova",
            "nameLocation": "684:7:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "691:2:11"
            },
            "returnParameters": {
              "id": 10402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10401,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10412,
                  "src": "717:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10400,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "717:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "716:6:11"
            },
            "scope": 10516,
            "src": "675:102:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10423,
              "nodeType": "Block",
              "src": "839:33:11",
              "statements": [
                {
                  "expression": {
                    "id": 10421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10419,
                      "name": "sNova",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10371,
                      "src": "850:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10420,
                      "name": "_sNova",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10414,
                      "src": "858:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "850:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10422,
                  "nodeType": "ExpressionStatement",
                  "src": "850:14:11"
                }
              ]
            },
            "functionSelector": "9dfd5f05",
            "id": 10424,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10417,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10416,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "830:9:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "830:9:11"
              }
            ],
            "name": "setupSNova",
            "nameLocation": "794:10:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10414,
                  "mutability": "mutable",
                  "name": "_sNova",
                  "nameLocation": "813:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 10424,
                  "src": "805:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10413,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "805:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "804:16:11"
            },
            "returnParameters": {
              "id": 10418,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "839:0:11"
            },
            "scope": 10516,
            "src": "785:87:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12299
            ],
            "body": {
              "id": 10440,
              "nodeType": "Block",
              "src": "1067:38:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10436,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10427,
                        "src": "1084:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10437,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10429,
                        "src": "1089:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10435,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12345,
                      "src": "1078:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1078:19:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10439,
                  "nodeType": "ExpressionStatement",
                  "src": "1078:19:11"
                }
              ]
            },
            "documentation": {
              "id": 10425,
              "nodeType": "StructuredDocumentation",
              "src": "880:93:11",
              "text": "@notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterShiba)."
            },
            "functionSelector": "40c10f19",
            "id": 10441,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10433,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10432,
                  "name": "onlyOwnerOrSNova",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10384,
                  "src": "1049:16:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "1049:16:11"
              }
            ],
            "name": "mint",
            "nameLocation": "988:4:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10431,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1040:8:11"
            },
            "parameters": {
              "id": 10430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10427,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1001:3:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 10441,
                  "src": "993:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "993:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10429,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1014:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 10441,
                  "src": "1006:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10428,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "992:30:11"
            },
            "returnParameters": {
              "id": 10434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1067:0:11"
            },
            "scope": 10516,
            "src": "979:126:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12284
            ],
            "body": {
              "id": 10514,
              "nodeType": "Block",
              "src": "1280:595:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10453,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10448,
                          "src": "1299:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1308:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1299:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e742030",
                        "id": 10456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1311:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa0c75600cc81ac69d9358030c40cab76c7291229be6a13e3d364c52d7ae813b",
                          "typeString": "literal_string \"amount 0\""
                        },
                        "value": "amount 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa0c75600cc81ac69d9358030c40cab76c7291229be6a13e3d364c52d7ae813b",
                          "typeString": "literal_string \"amount 0\""
                        }
                      ],
                      "id": 10452,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1291:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1291:31:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10458,
                  "nodeType": "ExpressionStatement",
                  "src": "1291:31:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 10461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10459,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10446,
                      "src": "1337:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 10460,
                      "name": "BURN_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11954,
                      "src": "1350:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1337:25:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 10512,
                    "nodeType": "Block",
                    "src": "1424:444:11",
                    "statements": [
                      {
                        "assignments": [
                          10471
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10471,
                            "mutability": "mutable",
                            "name": "burnAmount",
                            "nameLocation": "1490:10:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 10512,
                            "src": "1482:18:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 10470,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1482:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10477,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 10474,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 10472,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10448,
                              "src": "1503:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 10473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1510:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "1503:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 10475,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1512:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "1503:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1482:33:11"
                      },
                      {
                        "assignments": [
                          10479
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10479,
                            "mutability": "mutable",
                            "name": "sendAmount",
                            "nameLocation": "1588:10:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 10512,
                            "src": "1580:18:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 10478,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1580:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10483,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10480,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10448,
                            "src": "1601:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 10481,
                            "name": "burnAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10471,
                            "src": "1608:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1601:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1580:38:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 10489,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 10485,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10448,
                                "src": "1641:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 10488,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 10486,
                                  "name": "sendAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10479,
                                  "src": "1651:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 10487,
                                  "name": "burnAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10471,
                                  "src": "1664:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1651:23:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1641:33:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f76613a3a7472616e736665723a204275726e2076616c756520696e76616c6964",
                              "id": 10490,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1676:36:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5fe528bdccd3636f08bf3818ed6bb8ffc861cbc53939150f5c6fcaf21e8516f9",
                                "typeString": "literal_string \"Nova::transfer: Burn value invalid\""
                              },
                              "value": "Nova::transfer: Burn value invalid"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5fe528bdccd3636f08bf3818ed6bb8ffc861cbc53939150f5c6fcaf21e8516f9",
                                "typeString": "literal_string \"Nova::transfer: Burn value invalid\""
                              }
                            ],
                            "id": 10484,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1633:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1633:80:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10492,
                        "nodeType": "ExpressionStatement",
                        "src": "1633:80:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10496,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10444,
                              "src": "1742:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10497,
                              "name": "burnAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10471,
                              "src": "1750:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 10493,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "1730:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_NovaToken_$10516_$",
                                "typeString": "type(contract super NovaToken)"
                              }
                            },
                            "id": 10495,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12393,
                            "src": "1730:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 10498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1730:31:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10499,
                        "nodeType": "ExpressionStatement",
                        "src": "1730:31:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10503,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10444,
                              "src": "1792:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10504,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10446,
                              "src": "1800:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10505,
                              "name": "sendAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10479,
                              "src": "1811:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 10500,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "1776:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_NovaToken_$10516_$",
                                "typeString": "type(contract super NovaToken)"
                              }
                            },
                            "id": 10502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12284,
                            "src": "1776:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 10506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1776:46:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10507,
                        "nodeType": "ExpressionStatement",
                        "src": "1776:46:11"
                      },
                      {
                        "expression": {
                          "id": 10510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10508,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10448,
                            "src": "1837:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10509,
                            "name": "sendAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10479,
                            "src": "1846:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1837:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10511,
                        "nodeType": "ExpressionStatement",
                        "src": "1837:19:11"
                      }
                    ]
                  },
                  "id": 10513,
                  "nodeType": "IfStatement",
                  "src": "1333:535:11",
                  "trueBody": {
                    "id": 10469,
                    "nodeType": "Block",
                    "src": "1364:54:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10465,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10444,
                              "src": "1391:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10466,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10448,
                              "src": "1399:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 10462,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "1379:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_NovaToken_$10516_$",
                                "typeString": "type(contract super NovaToken)"
                              }
                            },
                            "id": 10464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12393,
                            "src": "1379:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 10467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1379:27:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10468,
                        "nodeType": "ExpressionStatement",
                        "src": "1379:27:11"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 10442,
              "nodeType": "StructuredDocumentation",
              "src": "1115:63:11",
              "text": "@dev overrides transfer function to meet tokenomics of Nova"
            },
            "id": 10515,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "1193:9:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10450,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1271:8:11"
            },
            "parameters": {
              "id": 10449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10444,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1211:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 10515,
                  "src": "1203:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10443,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1203:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10446,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1227:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 10515,
                  "src": "1219:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10445,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1219:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10448,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1246:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 10515,
                  "src": "1238:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10447,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1202:51:11"
            },
            "returnParameters": {
              "id": 10451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1280:0:11"
            },
            "scope": 10516,
            "src": "1184:691:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 10517,
        "src": "97:1783:11",
        "usedErrors": []
      }
    ],
    "src": "35:1845:11"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/NovaToken.sol",
    "exportedSymbols": {
      "Address": [
        479
      ],
      "Context": [
        501
      ],
      "IBEP20": [
        11157
      ],
      "NovaToken": [
        10516
      ],
      "Ownable": [
        104
      ],
      "SafeMath": [
        813
      ],
      "ShibaBEP20": [
        12469
      ]
    },
    "id": 10517,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10364,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:11"
      },
      {
        "absolutePath": "project:/contracts/libs/ShibaBEP20.sol",
        "file": "./libs/ShibaBEP20.sol",
        "id": 10365,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10517,
        "sourceUnit": 12470,
        "src": "62:31:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "53686962614e4f564120",
                "id": 10367,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "130:12:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_4b54363f53ee3b97f1de5ff7f850e64fa7d038bf1d632b8a1bf10280f7ea0595",
                  "typeString": "literal_string \"ShibaNOVA \""
                },
                "value": "ShibaNOVA "
              },
              {
                "hexValue": "4e4f5641",
                "id": 10368,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "144:6:11",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_6c815368d22c13cd70e1de11ebe86229e240e018e6583c59946d468748640306",
                  "typeString": "literal_string \"NOVA\""
                },
                "value": "NOVA"
              }
            ],
            "baseName": {
              "id": 10366,
              "name": "ShibaBEP20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 12469,
              "src": "119:10:11"
            },
            "id": 10369,
            "nodeType": "InheritanceSpecifier",
            "src": "119:32:11"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10516,
        "linearizedBaseContracts": [
          10516,
          12469,
          104,
          11157,
          501
        ],
        "name": "NovaToken",
        "nameLocation": "106:9:11",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "2ce39db1",
            "id": 10371,
            "mutability": "mutable",
            "name": "sNova",
            "nameLocation": "176:5:11",
            "nodeType": "VariableDeclaration",
            "scope": 10516,
            "src": "161:20:11",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10370,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "161:7:11",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 10383,
              "nodeType": "Block",
              "src": "310:98:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 10378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 10374,
                            "name": "isOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10397,
                            "src": "329:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 10375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "329:9:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 10376,
                            "name": "isSNova",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10412,
                            "src": "342:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 10377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "342:9:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "329:22:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206973206e6f7420746865206f776e6572206f7220734e6f7661",
                        "id": 10379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "353:34:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5583e28ebcff72a8cebca023463673e9f156021121ebb50cf259c52a58a6e87",
                          "typeString": "literal_string \"caller is not the owner or sNova\""
                        },
                        "value": "caller is not the owner or sNova"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5583e28ebcff72a8cebca023463673e9f156021121ebb50cf259c52a58a6e87",
                          "typeString": "literal_string \"caller is not the owner or sNova\""
                        }
                      ],
                      "id": 10373,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "321:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "321:67:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10381,
                  "nodeType": "ExpressionStatement",
                  "src": "321:67:11"
                },
                {
                  "id": 10382,
                  "nodeType": "PlaceholderStatement",
                  "src": "399:1:11"
                }
              ]
            },
            "id": 10384,
            "name": "onlyOwnerOrSNova",
            "nameLocation": "291:16:11",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 10372,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "307:2:11"
            },
            "src": "282:126:11",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10396,
              "nodeType": "Block",
              "src": "542:47:11",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 10394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10390,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "560:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 10391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "560:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 10392,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "574:5:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 10393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "574:7:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "560:21:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10389,
                  "id": 10395,
                  "nodeType": "Return",
                  "src": "553:28:11"
                }
              ]
            },
            "documentation": {
              "id": 10385,
              "nodeType": "StructuredDocumentation",
              "src": "416:74:11",
              "text": " @dev Returns true if the caller is the current owner."
            },
            "functionSelector": "8f32d59b",
            "id": 10397,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOwner",
            "nameLocation": "505:7:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "512:2:11"
            },
            "returnParameters": {
              "id": 10389,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10388,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10397,
                  "src": "536:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10387,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "536:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "535:6:11"
            },
            "scope": 10516,
            "src": "496:93:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10411,
              "nodeType": "Block",
              "src": "723:54:11",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 10409,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10403,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "741:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 10404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "741:10:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 10407,
                          "name": "sNova",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10371,
                          "src": "763:5:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 10406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "755:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 10405,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "755:7:11",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 10408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "755:14:11",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "741:28:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10402,
                  "id": 10410,
                  "nodeType": "Return",
                  "src": "734:35:11"
                }
              ]
            },
            "documentation": {
              "id": 10398,
              "nodeType": "StructuredDocumentation",
              "src": "597:72:11",
              "text": " @dev Returns true if the caller is sNova contracts."
            },
            "id": 10412,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isSNova",
            "nameLocation": "684:7:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "691:2:11"
            },
            "returnParameters": {
              "id": 10402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10401,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10412,
                  "src": "717:4:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10400,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "717:4:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "716:6:11"
            },
            "scope": 10516,
            "src": "675:102:11",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10423,
              "nodeType": "Block",
              "src": "839:33:11",
              "statements": [
                {
                  "expression": {
                    "id": 10421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10419,
                      "name": "sNova",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10371,
                      "src": "850:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10420,
                      "name": "_sNova",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10414,
                      "src": "858:6:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "850:14:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10422,
                  "nodeType": "ExpressionStatement",
                  "src": "850:14:11"
                }
              ]
            },
            "functionSelector": "9dfd5f05",
            "id": 10424,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10417,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10416,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46,
                  "src": "830:9:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "830:9:11"
              }
            ],
            "name": "setupSNova",
            "nameLocation": "794:10:11",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10414,
                  "mutability": "mutable",
                  "name": "_sNova",
                  "nameLocation": "813:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 10424,
                  "src": "805:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10413,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "805:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "804:16:11"
            },
            "returnParameters": {
              "id": 10418,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "839:0:11"
            },
            "scope": 10516,
            "src": "785:87:11",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12299
            ],
            "body": {
              "id": 10440,
              "nodeType": "Block",
              "src": "1067:38:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10436,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10427,
                        "src": "1084:3:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10437,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10429,
                        "src": "1089:7:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10435,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12345,
                      "src": "1078:5:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1078:19:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10439,
                  "nodeType": "ExpressionStatement",
                  "src": "1078:19:11"
                }
              ]
            },
            "documentation": {
              "id": 10425,
              "nodeType": "StructuredDocumentation",
              "src": "880:93:11",
              "text": "@notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterShiba)."
            },
            "functionSelector": "40c10f19",
            "id": 10441,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10433,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10432,
                  "name": "onlyOwnerOrSNova",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10384,
                  "src": "1049:16:11"
                },
                "nodeType": "ModifierInvocation",
                "src": "1049:16:11"
              }
            ],
            "name": "mint",
            "nameLocation": "988:4:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10431,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1040:8:11"
            },
            "parameters": {
              "id": 10430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10427,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1001:3:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 10441,
                  "src": "993:11:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10426,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "993:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10429,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1014:7:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 10441,
                  "src": "1006:15:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10428,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "992:30:11"
            },
            "returnParameters": {
              "id": 10434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1067:0:11"
            },
            "scope": 10516,
            "src": "979:126:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              12284
            ],
            "body": {
              "id": 10514,
              "nodeType": "Block",
              "src": "1280:595:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10453,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10448,
                          "src": "1299:6:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 10454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1308:1:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1299:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e742030",
                        "id": 10456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1311:10:11",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa0c75600cc81ac69d9358030c40cab76c7291229be6a13e3d364c52d7ae813b",
                          "typeString": "literal_string \"amount 0\""
                        },
                        "value": "amount 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa0c75600cc81ac69d9358030c40cab76c7291229be6a13e3d364c52d7ae813b",
                          "typeString": "literal_string \"amount 0\""
                        }
                      ],
                      "id": 10452,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1291:7:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1291:31:11",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10458,
                  "nodeType": "ExpressionStatement",
                  "src": "1291:31:11"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 10461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10459,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10446,
                      "src": "1337:9:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 10460,
                      "name": "BURN_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11954,
                      "src": "1350:12:11",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1337:25:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 10512,
                    "nodeType": "Block",
                    "src": "1424:444:11",
                    "statements": [
                      {
                        "assignments": [
                          10471
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10471,
                            "mutability": "mutable",
                            "name": "burnAmount",
                            "nameLocation": "1490:10:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 10512,
                            "src": "1482:18:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 10470,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1482:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10477,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 10474,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 10472,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10448,
                              "src": "1503:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 10473,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1510:1:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "1503:8:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 10475,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1512:3:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "1503:12:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1482:33:11"
                      },
                      {
                        "assignments": [
                          10479
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10479,
                            "mutability": "mutable",
                            "name": "sendAmount",
                            "nameLocation": "1588:10:11",
                            "nodeType": "VariableDeclaration",
                            "scope": 10512,
                            "src": "1580:18:11",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 10478,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1580:7:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10483,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 10482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 10480,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10448,
                            "src": "1601:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 10481,
                            "name": "burnAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10471,
                            "src": "1608:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1601:17:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1580:38:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 10489,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 10485,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10448,
                                "src": "1641:6:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 10488,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 10486,
                                  "name": "sendAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10479,
                                  "src": "1651:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 10487,
                                  "name": "burnAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10471,
                                  "src": "1664:10:11",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1651:23:11",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1641:33:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f76613a3a7472616e736665723a204275726e2076616c756520696e76616c6964",
                              "id": 10490,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1676:36:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5fe528bdccd3636f08bf3818ed6bb8ffc861cbc53939150f5c6fcaf21e8516f9",
                                "typeString": "literal_string \"Nova::transfer: Burn value invalid\""
                              },
                              "value": "Nova::transfer: Burn value invalid"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5fe528bdccd3636f08bf3818ed6bb8ffc861cbc53939150f5c6fcaf21e8516f9",
                                "typeString": "literal_string \"Nova::transfer: Burn value invalid\""
                              }
                            ],
                            "id": 10484,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1633:7:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1633:80:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10492,
                        "nodeType": "ExpressionStatement",
                        "src": "1633:80:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10496,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10444,
                              "src": "1742:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10497,
                              "name": "burnAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10471,
                              "src": "1750:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 10493,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "1730:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_NovaToken_$10516_$",
                                "typeString": "type(contract super NovaToken)"
                              }
                            },
                            "id": 10495,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12393,
                            "src": "1730:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 10498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1730:31:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10499,
                        "nodeType": "ExpressionStatement",
                        "src": "1730:31:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10503,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10444,
                              "src": "1792:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10504,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10446,
                              "src": "1800:9:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10505,
                              "name": "sendAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10479,
                              "src": "1811:10:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 10500,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "1776:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_NovaToken_$10516_$",
                                "typeString": "type(contract super NovaToken)"
                              }
                            },
                            "id": 10502,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12284,
                            "src": "1776:15:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 10506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1776:46:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10507,
                        "nodeType": "ExpressionStatement",
                        "src": "1776:46:11"
                      },
                      {
                        "expression": {
                          "id": 10510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10508,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10448,
                            "src": "1837:6:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10509,
                            "name": "sendAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10479,
                            "src": "1846:10:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1837:19:11",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10511,
                        "nodeType": "ExpressionStatement",
                        "src": "1837:19:11"
                      }
                    ]
                  },
                  "id": 10513,
                  "nodeType": "IfStatement",
                  "src": "1333:535:11",
                  "trueBody": {
                    "id": 10469,
                    "nodeType": "Block",
                    "src": "1364:54:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 10465,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10444,
                              "src": "1391:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10466,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10448,
                              "src": "1399:6:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 10462,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "1379:5:11",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_NovaToken_$10516_$",
                                "typeString": "type(contract super NovaToken)"
                              }
                            },
                            "id": 10464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 12393,
                            "src": "1379:11:11",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 10467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1379:27:11",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10468,
                        "nodeType": "ExpressionStatement",
                        "src": "1379:27:11"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 10442,
              "nodeType": "StructuredDocumentation",
              "src": "1115:63:11",
              "text": "@dev overrides transfer function to meet tokenomics of Nova"
            },
            "id": 10515,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "1193:9:11",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10450,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1271:8:11"
            },
            "parameters": {
              "id": 10449,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10444,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1211:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 10515,
                  "src": "1203:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10443,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1203:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10446,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1227:9:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 10515,
                  "src": "1219:17:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10445,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1219:7:11",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10448,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1246:6:11",
                  "nodeType": "VariableDeclaration",
                  "scope": 10515,
                  "src": "1238:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10447,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1202:51:11"
            },
            "returnParameters": {
              "id": 10451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1280:0:11"
            },
            "scope": 10516,
            "src": "1184:691:11",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 10517,
        "src": "97:1783:11",
        "usedErrors": []
      }
    ],
    "src": "35:1845:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-02-12T20:30:34.018Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {BEP20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {BEP20-balanceOf}."
      },
      "burnSupply()": {
        "details": "See {BEP20-totalSupply}."
      },
      "decimals()": {
        "details": "Returns the token decimals."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getOwner()": {
        "details": "Returns the bep token owner."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "name()": {
        "details": "Returns the token name."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the token symbol."
      },
      "totalSupply()": {
        "details": "See {BEP20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "mint(address,uint256)": {
        "notice": "Creates `_amount` token to `_to`. Must only be called by the owner (MasterShiba)."
      }
    },
    "version": 1
  }
}