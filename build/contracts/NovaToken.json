{
  "contractName": "NovaToken",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "BURN_ADDRESS",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "burnSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sNova",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_sNova",
          "type": "address"
        }
      ],
      "name": "setupSNova",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BURN_ADDRESS\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"burnSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sNova\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sNova\",\"type\":\"address\"}],\"name\":\"setupSNova\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {BEP20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {BEP20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {BEP20-balanceOf}.\"},\"burnSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"decimals()\":{\"details\":\"Returns the token decimals.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getOwner()\":{\"details\":\"Returns the bep token owner.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"name()\":{\"details\":\"Returns the token name.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the token symbol.\"},\"totalSupply()\":{\"details\":\"See {BEP20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"mint(address,uint256)\":{\"notice\":\"Creates `_amount` token to `_to`. Must only be called by the owner (MasterShiba).\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/D/Novaria/contracts/NovaToken.sol\":\"NovaToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/Novaria/contracts/NovaToken.sol\":{\"keccak256\":\"0xfe93f46479e773f4540f024a7c634ac9858b62a1a23053542f497ae4ab3a7f12\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f03872af7145c25ff61bc2e07d5e41a67a79f258d699c8de9791b8b6763a5220\",\"dweb:/ipfs/QmfWuzx764Jj7E3NKtpeAM1kpoqof9fjrNPYPSY62eguyi\"]},\"/D/Novaria/contracts/libs/IBEP20.sol\":{\"keccak256\":\"0x06827c4a144efe4b7f4eebe7cc9b3cec72ab103f0b3bc8ed2b17b7eacb8b8305\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://2d0a9616491ec4dd28a23491a156731d9c719edc3d78022e534c7ecd9bf51b6e\",\"dweb:/ipfs/QmTimAYxJtMyQkYWM41V85YvSuGXNiNiQCnqauN5gRxG9W\"]},\"/D/Novaria/contracts/libs/ShibaBEP20.sol\":{\"keccak256\":\"0x5adcf25a32cbd0857f543ed1be2ce594993ea06b48d8bbfa85704807cd1891c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c4b054a56efb00b37981332a2199cb57c19bfa521225b9d9a4f09b48fea10645\",\"dweb:/ipfs/QmTdZo52iBMBwTwcwRHHgbjdEtVqDP3x51H4hXnkfo14ns\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa1b27b3f44ff825974e5268e8f63ad3b03add5b464880d860fbb8cae043e17f7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad0fb4425453220f15bdb8c4e009052839804bb725797b6d8c02ee2271bc3c23\",\"dweb:/ipfs/QmPtjdMxzEifPUEUa6cKX1yfTWjaZV6QtdwMdN6bEL9FBM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9944d1038f27dcebff810d7ba16b3b8058b967173d76874fb72dd7cd84129656\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c455cda07c5f8978c57e545ddde382552d3a55b6e3682e0f809ed07ec7defbe\",\"dweb:/ipfs/QmXkoKbxyMcMzjYdkXi5t4t3ZjBQ81pj7AaanS9jhePxyt\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x7736c187e6f1358c1ea9350a2a21aa8528dec1c2f43b374a9067465a3a51f5d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4fd625dca17657403af518cc6c8ab5c54c58898cf6e912ca2e1b0f3194ad0405\",\"dweb:/ipfs/QmQVv7YeeKmaS11bg7YDTeeGDk6i7sV8LMMfohaLM4SiRu\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x29c462775f5b4c76dce400f120f3530aa3f81da42c839f975dc2b64784d22434\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://063db5d664d3d5bae10d0056c9d00339265229532d06b53d5f2e91778b2e428d\",\"dweb:/ipfs/QmWM92rU59t6BcZSj4w6ikoPL32R9hyTMb9Msg5X8vvu1s\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280600a81526020017f53686962614e4f564120000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f4e4f5641000000000000000000000000000000000000000000000000000000008152506200009e62000092620000f460201b60201c565b620000fc60201b60201c565b8160059080519060200190620000b6929190620001c0565b508060069080519060200190620000cf929190620001c0565b506012600760006101000a81548160ff021916908360ff1602179055505050620002d5565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620001ce9062000270565b90600052602060002090601f016020900481019282620001f257600085556200023e565b82601f106200020d57805160ff19168380011785556200023e565b828001600101855582156200023e579182015b828111156200023d57825182559160200191906001019062000220565b5b5090506200024d919062000251565b5090565b5b808211156200026c57600081600090555060010162000252565b5090565b600060028204905060018216806200028957607f821691505b60208210811415620002a0576200029f620002a6565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6121dc80620002e56000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063893d20e8116100b8578063a457c2d71161007c578063a457c2d71461032e578063a9059cbb1461035e578063b03e64781461038e578063dd62ed3e146103ac578063f2fde38b146103dc578063fccc2813146103f857610137565b8063893d20e81461029a5780638da5cb5b146102b85780638f32d59b146102d657806395d89b41146102f45780639dfd5f051461031257610137565b8063313ce567116100ff578063313ce567146101f6578063395093511461021457806340c10f191461024457806370a0823114610260578063715018a61461029057610137565b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461018a57806323b872dd146101a85780632ce39db1146101d8575b600080fd5b610144610416565b60405161015191906119d0565b60405180910390f35b610174600480360381019061016f9190611764565b6104a8565b60405161018191906119b5565b60405180910390f35b6101926104c6565b60405161019f9190611b52565b60405180910390f35b6101c260048036038101906101bd9190611711565b6104d0565b6040516101cf91906119b5565b60405180910390f35b6101e06105a9565b6040516101ed919061199a565b60405180910390f35b6101fe6105cf565b60405161020b9190611b6d565b60405180910390f35b61022e60048036038101906102299190611764565b6105e6565b60405161023b91906119b5565b60405180910390f35b61025e60048036038101906102599190611764565b610699565b005b61027a600480360381019061027591906116a4565b6106fd565b6040516102879190611b52565b60405180910390f35b610298610746565b005b6102a26107ce565b6040516102af919061199a565b60405180910390f35b6102c06107dd565b6040516102cd919061199a565b60405180910390f35b6102de610806565b6040516102eb91906119b5565b60405180910390f35b6102fc610843565b60405161030991906119d0565b60405180910390f35b61032c600480360381019061032791906116a4565b6108d5565b005b61034860048036038101906103439190611764565b610995565b60405161035591906119b5565b60405180910390f35b61037860048036038101906103739190611764565b610a62565b60405161038591906119b5565b60405180910390f35b610396610a80565b6040516103a39190611b52565b60405180910390f35b6103c660048036038101906103c191906116d1565b610a8a565b6040516103d39190611b52565b60405180910390f35b6103f660048036038101906103f191906116a4565b610b11565b005b610400610c09565b60405161040d919061199a565b60405180910390f35b60606005805461042590611d41565b80601f016020809104026020016040519081016040528092919081815260200182805461045190611d41565b801561049e5780601f106104735761010080835404028352916020019161049e565b820191906000526020600020905b81548152906001019060200180831161048157829003601f168201915b5050505050905090565b60006104bc6104b5610c0f565b8484610c17565b6001905092915050565b6000600354905090565b60006104dd848484610de2565b61059e846104e9610c0f565b6105998560405180606001604052806028815260200161211260289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061054f610c0f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f049092919063ffffffff16565b610c17565b600190509392505050565b600760019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600760009054906101000a900460ff16905090565b600061068f6105f3610c0f565b8461068a8560026000610604610c0f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f5990919063ffffffff16565b610c17565b6001905092915050565b6106a1610806565b806106b057506106af610f6f565b5b6106ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e690611b12565b60405180910390fd5b6106f98282610fc7565b5050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61074e610c0f565b73ffffffffffffffffffffffffffffffffffffffff1661076c6107dd565b73ffffffffffffffffffffffffffffffffffffffff16146107c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b990611a92565b60405180910390fd5b6107cc6000611151565b565b60006107d86107dd565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006108106107dd565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60606006805461085290611d41565b80601f016020809104026020016040519081016040528092919081815260200182805461087e90611d41565b80156108cb5780601f106108a0576101008083540402835291602001916108cb565b820191906000526020600020905b8154815290600101906020018083116108ae57829003601f168201915b5050505050905090565b6108dd610c0f565b73ffffffffffffffffffffffffffffffffffffffff166108fb6107dd565b73ffffffffffffffffffffffffffffffffffffffff1614610951576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094890611a92565b60405180910390fd5b80600760016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000610a586109a2610c0f565b84610a538560405180606001604052806025815260200161216060259139600260006109cc610c0f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f049092919063ffffffff16565b610c17565b6001905092915050565b6000610a76610a6f610c0f565b8484610de2565b6001905092915050565b6000600454905090565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610b19610c0f565b73ffffffffffffffffffffffffffffffffffffffff16610b376107dd565b73ffffffffffffffffffffffffffffffffffffffff1614610b8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8490611a92565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610bfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf490611a32565b60405180910390fd5b610c0681611151565b50565b61dead81565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7e90611a12565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cf7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cee90611b32565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610dd59190611b52565b60405180910390a3505050565b60008111610e25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1c90611ab2565b60405180910390fd5b61dead73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e6a57610e658382611215565b610eff565b60006064600283610e7b9190611c2b565b610e859190611bfa565b905060008183610e959190611c85565b90508181610ea39190611ba4565b8314610ee4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610edb90611a52565b60405180910390fd5b610eee8583611215565b610ef98585836113d6565b80925050505b505050565b6000838311158290610f4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4391906119d0565b60405180910390fd5b5082840390509392505050565b60008183610f679190611ba4565b905092915050565b6000600760019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611037576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102e90611a72565b60405180910390fd5b61104c81600354610f5990919063ffffffff16565b6003819055506110a481600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f5990919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111459190611b52565b60405180910390a35050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61dead73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611286576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127d90611af2565b60405180910390fd5b6112f28160405180606001604052806022815260200161218560229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f049092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061134a8160035461166490919063ffffffff16565b60038190555061136581600454610f5990919063ffffffff16565b60048190555061dead73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113ca9190611b52565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611446576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143d906119f2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156114b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ad90611ad2565b60405180910390fd5b6115228160405180606001604052806026815260200161213a60269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f049092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506115b781600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f5990919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516116579190611b52565b60405180910390a3505050565b600081836116729190611c85565b905092915050565b600081359050611689816120e3565b92915050565b60008135905061169e816120fa565b92915050565b6000602082840312156116ba576116b9611e00565b5b60006116c88482850161167a565b91505092915050565b600080604083850312156116e8576116e7611e00565b5b60006116f68582860161167a565b92505060206117078582860161167a565b9150509250929050565b60008060006060848603121561172a57611729611e00565b5b60006117388682870161167a565b93505060206117498682870161167a565b925050604061175a8682870161168f565b9150509250925092565b6000806040838503121561177b5761177a611e00565b5b60006117898582860161167a565b925050602061179a8582860161168f565b9150509250929050565b6117ad81611cb9565b82525050565b6117bc81611ccb565b82525050565b60006117cd82611b88565b6117d78185611b93565b93506117e7818560208601611d0e565b6117f081611e05565b840191505092915050565b6000611808602583611b93565b915061181382611e16565b604082019050919050565b600061182b602483611b93565b915061183682611e65565b604082019050919050565b600061184e602683611b93565b915061185982611eb4565b604082019050919050565b6000611871602283611b93565b915061187c82611f03565b604082019050919050565b6000611894601f83611b93565b915061189f82611f52565b602082019050919050565b60006118b7602083611b93565b91506118c282611f7b565b602082019050919050565b60006118da600883611b93565b91506118e582611fa4565b602082019050919050565b60006118fd602383611b93565b915061190882611fcd565b604082019050919050565b6000611920602183611b93565b915061192b8261201c565b604082019050919050565b6000611943602083611b93565b915061194e8261206b565b602082019050919050565b6000611966602283611b93565b915061197182612094565b604082019050919050565b61198581611cf7565b82525050565b61199481611d01565b82525050565b60006020820190506119af60008301846117a4565b92915050565b60006020820190506119ca60008301846117b3565b92915050565b600060208201905081810360008301526119ea81846117c2565b905092915050565b60006020820190508181036000830152611a0b816117fb565b9050919050565b60006020820190508181036000830152611a2b8161181e565b9050919050565b60006020820190508181036000830152611a4b81611841565b9050919050565b60006020820190508181036000830152611a6b81611864565b9050919050565b60006020820190508181036000830152611a8b81611887565b9050919050565b60006020820190508181036000830152611aab816118aa565b9050919050565b60006020820190508181036000830152611acb816118cd565b9050919050565b60006020820190508181036000830152611aeb816118f0565b9050919050565b60006020820190508181036000830152611b0b81611913565b9050919050565b60006020820190508181036000830152611b2b81611936565b9050919050565b60006020820190508181036000830152611b4b81611959565b9050919050565b6000602082019050611b67600083018461197c565b92915050565b6000602082019050611b82600083018461198b565b92915050565b600081519050919050565b600082825260208201905092915050565b6000611baf82611cf7565b9150611bba83611cf7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611bef57611bee611d73565b5b828201905092915050565b6000611c0582611cf7565b9150611c1083611cf7565b925082611c2057611c1f611da2565b5b828204905092915050565b6000611c3682611cf7565b9150611c4183611cf7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611c7a57611c79611d73565b5b828202905092915050565b6000611c9082611cf7565b9150611c9b83611cf7565b925082821015611cae57611cad611d73565b5b828203905092915050565b6000611cc482611cd7565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611d2c578082015181840152602081019050611d11565b83811115611d3b576000848401525b50505050565b60006002820490506001821680611d5957607f821691505b60208210811415611d6d57611d6c611dd1565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f42455032303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f42455032303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4e6f76613a3a7472616e736665723a204275726e2076616c756520696e76616c60008201527f6964000000000000000000000000000000000000000000000000000000000000602082015250565b7f42455032303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f616d6f756e742030000000000000000000000000000000000000000000000000600082015250565b7f42455032303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f42455032303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f63616c6c6572206973206e6f7420746865206f776e6572206f7220734e6f7661600082015250565b7f42455032303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6120ec81611cb9565b81146120f757600080fd5b50565b61210381611cf7565b811461210e57600080fd5b5056fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365a26469706673582212201cc16085b5bc766e38b79a7a7ae6fa40db2f3735ca7b80d27d20df81944eac3564736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101375760003560e01c8063893d20e8116100b8578063a457c2d71161007c578063a457c2d71461032e578063a9059cbb1461035e578063b03e64781461038e578063dd62ed3e146103ac578063f2fde38b146103dc578063fccc2813146103f857610137565b8063893d20e81461029a5780638da5cb5b146102b85780638f32d59b146102d657806395d89b41146102f45780639dfd5f051461031257610137565b8063313ce567116100ff578063313ce567146101f6578063395093511461021457806340c10f191461024457806370a0823114610260578063715018a61461029057610137565b806306fdde031461013c578063095ea7b31461015a57806318160ddd1461018a57806323b872dd146101a85780632ce39db1146101d8575b600080fd5b610144610416565b60405161015191906119d0565b60405180910390f35b610174600480360381019061016f9190611764565b6104a8565b60405161018191906119b5565b60405180910390f35b6101926104c6565b60405161019f9190611b52565b60405180910390f35b6101c260048036038101906101bd9190611711565b6104d0565b6040516101cf91906119b5565b60405180910390f35b6101e06105a9565b6040516101ed919061199a565b60405180910390f35b6101fe6105cf565b60405161020b9190611b6d565b60405180910390f35b61022e60048036038101906102299190611764565b6105e6565b60405161023b91906119b5565b60405180910390f35b61025e60048036038101906102599190611764565b610699565b005b61027a600480360381019061027591906116a4565b6106fd565b6040516102879190611b52565b60405180910390f35b610298610746565b005b6102a26107ce565b6040516102af919061199a565b60405180910390f35b6102c06107dd565b6040516102cd919061199a565b60405180910390f35b6102de610806565b6040516102eb91906119b5565b60405180910390f35b6102fc610843565b60405161030991906119d0565b60405180910390f35b61032c600480360381019061032791906116a4565b6108d5565b005b61034860048036038101906103439190611764565b610995565b60405161035591906119b5565b60405180910390f35b61037860048036038101906103739190611764565b610a62565b60405161038591906119b5565b60405180910390f35b610396610a80565b6040516103a39190611b52565b60405180910390f35b6103c660048036038101906103c191906116d1565b610a8a565b6040516103d39190611b52565b60405180910390f35b6103f660048036038101906103f191906116a4565b610b11565b005b610400610c09565b60405161040d919061199a565b60405180910390f35b60606005805461042590611d41565b80601f016020809104026020016040519081016040528092919081815260200182805461045190611d41565b801561049e5780601f106104735761010080835404028352916020019161049e565b820191906000526020600020905b81548152906001019060200180831161048157829003601f168201915b5050505050905090565b60006104bc6104b5610c0f565b8484610c17565b6001905092915050565b6000600354905090565b60006104dd848484610de2565b61059e846104e9610c0f565b6105998560405180606001604052806028815260200161211260289139600260008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061054f610c0f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f049092919063ffffffff16565b610c17565b600190509392505050565b600760019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600760009054906101000a900460ff16905090565b600061068f6105f3610c0f565b8461068a8560026000610604610c0f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f5990919063ffffffff16565b610c17565b6001905092915050565b6106a1610806565b806106b057506106af610f6f565b5b6106ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106e690611b12565b60405180910390fd5b6106f98282610fc7565b5050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61074e610c0f565b73ffffffffffffffffffffffffffffffffffffffff1661076c6107dd565b73ffffffffffffffffffffffffffffffffffffffff16146107c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b990611a92565b60405180910390fd5b6107cc6000611151565b565b60006107d86107dd565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006108106107dd565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b60606006805461085290611d41565b80601f016020809104026020016040519081016040528092919081815260200182805461087e90611d41565b80156108cb5780601f106108a0576101008083540402835291602001916108cb565b820191906000526020600020905b8154815290600101906020018083116108ae57829003601f168201915b5050505050905090565b6108dd610c0f565b73ffffffffffffffffffffffffffffffffffffffff166108fb6107dd565b73ffffffffffffffffffffffffffffffffffffffff1614610951576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094890611a92565b60405180910390fd5b80600760016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000610a586109a2610c0f565b84610a538560405180606001604052806025815260200161216060259139600260006109cc610c0f565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f049092919063ffffffff16565b610c17565b6001905092915050565b6000610a76610a6f610c0f565b8484610de2565b6001905092915050565b6000600454905090565b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b610b19610c0f565b73ffffffffffffffffffffffffffffffffffffffff16610b376107dd565b73ffffffffffffffffffffffffffffffffffffffff1614610b8d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8490611a92565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610bfd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf490611a32565b60405180910390fd5b610c0681611151565b50565b61dead81565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c7e90611a12565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cf7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cee90611b32565b60405180910390fd5b80600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610dd59190611b52565b60405180910390a3505050565b60008111610e25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1c90611ab2565b60405180910390fd5b61dead73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e6a57610e658382611215565b610eff565b60006064600283610e7b9190611c2b565b610e859190611bfa565b905060008183610e959190611c85565b90508181610ea39190611ba4565b8314610ee4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610edb90611a52565b60405180910390fd5b610eee8583611215565b610ef98585836113d6565b80925050505b505050565b6000838311158290610f4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4391906119d0565b60405180910390fd5b5082840390509392505050565b60008183610f679190611ba4565b905092915050565b6000600760019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611037576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102e90611a72565b60405180910390fd5b61104c81600354610f5990919063ffffffff16565b6003819055506110a481600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f5990919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516111459190611b52565b60405180910390a35050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61dead73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611286576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161127d90611af2565b60405180910390fd5b6112f28160405180606001604052806022815260200161218560229139600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f049092919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061134a8160035461166490919063ffffffff16565b60038190555061136581600454610f5990919063ffffffff16565b60048190555061dead73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516113ca9190611b52565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611446576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143d906119f2565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156114b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ad90611ad2565b60405180910390fd5b6115228160405180606001604052806026815260200161213a60269139600160008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f049092919063ffffffff16565b600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506115b781600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610f5990919063ffffffff16565b600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516116579190611b52565b60405180910390a3505050565b600081836116729190611c85565b905092915050565b600081359050611689816120e3565b92915050565b60008135905061169e816120fa565b92915050565b6000602082840312156116ba576116b9611e00565b5b60006116c88482850161167a565b91505092915050565b600080604083850312156116e8576116e7611e00565b5b60006116f68582860161167a565b92505060206117078582860161167a565b9150509250929050565b60008060006060848603121561172a57611729611e00565b5b60006117388682870161167a565b93505060206117498682870161167a565b925050604061175a8682870161168f565b9150509250925092565b6000806040838503121561177b5761177a611e00565b5b60006117898582860161167a565b925050602061179a8582860161168f565b9150509250929050565b6117ad81611cb9565b82525050565b6117bc81611ccb565b82525050565b60006117cd82611b88565b6117d78185611b93565b93506117e7818560208601611d0e565b6117f081611e05565b840191505092915050565b6000611808602583611b93565b915061181382611e16565b604082019050919050565b600061182b602483611b93565b915061183682611e65565b604082019050919050565b600061184e602683611b93565b915061185982611eb4565b604082019050919050565b6000611871602283611b93565b915061187c82611f03565b604082019050919050565b6000611894601f83611b93565b915061189f82611f52565b602082019050919050565b60006118b7602083611b93565b91506118c282611f7b565b602082019050919050565b60006118da600883611b93565b91506118e582611fa4565b602082019050919050565b60006118fd602383611b93565b915061190882611fcd565b604082019050919050565b6000611920602183611b93565b915061192b8261201c565b604082019050919050565b6000611943602083611b93565b915061194e8261206b565b602082019050919050565b6000611966602283611b93565b915061197182612094565b604082019050919050565b61198581611cf7565b82525050565b61199481611d01565b82525050565b60006020820190506119af60008301846117a4565b92915050565b60006020820190506119ca60008301846117b3565b92915050565b600060208201905081810360008301526119ea81846117c2565b905092915050565b60006020820190508181036000830152611a0b816117fb565b9050919050565b60006020820190508181036000830152611a2b8161181e565b9050919050565b60006020820190508181036000830152611a4b81611841565b9050919050565b60006020820190508181036000830152611a6b81611864565b9050919050565b60006020820190508181036000830152611a8b81611887565b9050919050565b60006020820190508181036000830152611aab816118aa565b9050919050565b60006020820190508181036000830152611acb816118cd565b9050919050565b60006020820190508181036000830152611aeb816118f0565b9050919050565b60006020820190508181036000830152611b0b81611913565b9050919050565b60006020820190508181036000830152611b2b81611936565b9050919050565b60006020820190508181036000830152611b4b81611959565b9050919050565b6000602082019050611b67600083018461197c565b92915050565b6000602082019050611b82600083018461198b565b92915050565b600081519050919050565b600082825260208201905092915050565b6000611baf82611cf7565b9150611bba83611cf7565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611bef57611bee611d73565b5b828201905092915050565b6000611c0582611cf7565b9150611c1083611cf7565b925082611c2057611c1f611da2565b5b828204905092915050565b6000611c3682611cf7565b9150611c4183611cf7565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611c7a57611c79611d73565b5b828202905092915050565b6000611c9082611cf7565b9150611c9b83611cf7565b925082821015611cae57611cad611d73565b5b828203905092915050565b6000611cc482611cd7565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600060ff82169050919050565b60005b83811015611d2c578082015181840152602081019050611d11565b83811115611d3b576000848401525b50505050565b60006002820490506001821680611d5957607f821691505b60208210811415611d6d57611d6c611dd1565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600080fd5b6000601f19601f8301169050919050565b7f42455032303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b7f42455032303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4e6f76613a3a7472616e736665723a204275726e2076616c756520696e76616c60008201527f6964000000000000000000000000000000000000000000000000000000000000602082015250565b7f42455032303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f616d6f756e742030000000000000000000000000000000000000000000000000600082015250565b7f42455032303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b7f42455032303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b7f63616c6c6572206973206e6f7420746865206f776e6572206f7220734e6f7661600082015250565b7f42455032303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6120ec81611cb9565b81146120f757600080fd5b50565b61210381611cf7565b811461210e57600080fd5b5056fe42455032303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636542455032303a207472616e7366657220616d6f756e7420657863656564732062616c616e636542455032303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f42455032303a206275726e20616d6f756e7420657863656564732062616c616e6365a26469706673582212201cc16085b5bc766e38b79a7a7ae6fa40db2f3735ca7b80d27d20df81944eac3564736f6c63430008070033",
  "immutableReferences": {},
  "sourceMap": "97:1783:2:-:0;;;;;;;;;;;;;1327:144:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;921:32:9;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;1407:4:8;1399:5;:12;;;;;;;;;;;;:::i;:::-;;1432:6;1422:7;:16;;;;;;;;;;;;:::i;:::-;;1461:2;1449:9;;:14;;;;;;;;;;;;;;;;;;1327:144;;97:1783:2;;640:96:11;693:7;719:10;712:17;;640:96;:::o;2270:187:9:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;97:1783:2:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:320:13:-;51:6;88:1;82:4;78:12;68:22;;135:1;129:4;125:12;156:18;146:81;;212:4;204:6;200:17;190:27;;146:81;274:2;266:6;263:14;243:18;240:38;237:84;;;293:18;;:::i;:::-;237:84;58:269;7:320;;;:::o;333:180::-;381:77;378:1;371:88;478:4;475:1;468:15;502:4;499:1;492:15;97:1783:2;;;;;;;",
  "deployedSourceMap": "97:1783:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1696:92:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3336:161;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2172:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3968:397;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;161:20:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1855:92:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4773:210;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;979:126:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2487:119:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:101:9;;;:::i;:::-;;1539:94:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1036:85:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;496:93:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2012:96:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;785:87:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5485:311:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2818:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2336:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3047:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;623:81:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1696:92;1742:13;1775:5;1768:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1696:92;:::o;3336:161::-;3411:4;3428:39;3437:12;:10;:12::i;:::-;3451:7;3460:6;3428:8;:39::i;:::-;3485:4;3478:11;;3336:161;;;;:::o;2172:100::-;2225:7;2252:12;;2245:19;;2172:100;:::o;3968:397::-;4100:4;4117:36;4127:6;4135:9;4146:6;4117:9;:36::i;:::-;4164:171;4187:6;4208:12;:10;:12::i;:::-;4235:89;4273:6;4235:89;;;;;;;;;;;;;;;;;:11;:19;4247:6;4235:19;;;;;;;;;;;;;;;:33;4255:12;:10;:12::i;:::-;4235:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;4164:8;:171::i;:::-;4353:4;4346:11;;3968:397;;;;;:::o;161:20:2:-;;;;;;;;;;;;;:::o;1855:92:8:-;1905:5;1930:9;;;;;;;;;;;1923:16;;1855:92;:::o;4773:210::-;4853:4;4870:83;4879:12;:10;:12::i;:::-;4893:7;4902:50;4941:10;4902:11;:25;4914:12;:10;:12::i;:::-;4902:25;;;;;;;;;;;;;;;:34;4928:7;4902:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;4870:8;:83::i;:::-;4971:4;4964:11;;4773:210;;;;:::o;979:126:2:-;329:9;:7;:9::i;:::-;:22;;;;342:9;:7;:9::i;:::-;329:22;321:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1078:19:::1;1084:3;1089:7;1078:5;:19::i;:::-;979:126:::0;;:::o;2487:119:8:-;2553:7;2580:9;:18;2590:7;2580:18;;;;;;;;;;;;;;;;2573:25;;2487:119;;;:::o;1668:101:9:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1539:94:8:-;1591:7;1618;:5;:7::i;:::-;1611:14;;1539:94;:::o;1036:85:9:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;496:93:2:-;536:4;574:7;:5;:7::i;:::-;560:21;;:10;:21;;;553:28;;496:93;:::o;2012:96:8:-;2060:13;2093:7;2086:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2012:96;:::o;785:87:2:-;1259:12:9;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;858:6:2::1;850:5;;:14;;;;;;;;;;;;;;;;;;785:87:::0;:::o;5485:311:8:-;5570:4;5587:179;5610:12;:10;:12::i;:::-;5637:7;5659:96;5698:15;5659:96;;;;;;;;;;;;;;;;;:11;:25;5671:12;:10;:12::i;:::-;5659:25;;;;;;;;;;;;;;;:34;5685:7;5659:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;5587:8;:179::i;:::-;5784:4;5777:11;;5485:311;;;;:::o;2818:167::-;2896:4;2913:42;2923:12;:10;:12::i;:::-;2937:9;2948:6;2913:9;:42::i;:::-;2973:4;2966:11;;2818:167;;;;:::o;2336:89::-;2379:7;2406:11;;2399:18;;2336:89;:::o;3047:143::-;3128:7;3155:11;:18;3167:5;3155:18;;;;;;;;;;;;;;;:27;3174:7;3155:27;;;;;;;;;;;;;;;;3148:34;;3047:143;;;;:::o;1918:198:9:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;;;1998:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;623:81:8:-;662:42;623:81;:::o;640:96:11:-;693:7;719:10;712:17;;640:96;:::o;8674:372:8:-;8819:1;8802:19;;:5;:19;;;;8794:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8900:1;8881:21;;:7;:21;;;;8873:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;8984:6;8954:11;:18;8966:5;8954:18;;;;;;;;;;;;;;;:27;8973:7;8954:27;;;;;;;;;;;;;;;:36;;;;9022:7;9006:32;;9015:5;9006:32;;;9031:6;9006:32;;;;;;:::i;:::-;;;;;;;;8674:372;;;:::o;1184:691:2:-;1308:1;1299:6;:10;1291:31;;;;;;;;;;;;:::i;:::-;;;;;;;;;662:42:8;1337:25:2;;:9;:25;;;1333:535;;;1379:27;1391:6;1399;1379:11;:27::i;:::-;1333:535;;;1482:18;1512:3;1510:1;1503:6;:8;;;;:::i;:::-;:12;;;;:::i;:::-;1482:33;;1580:18;1608:10;1601:6;:17;;;;:::i;:::-;1580:38;;1664:10;1651;:23;;;;:::i;:::-;1641:6;:33;1633:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;1730:31;1742:6;1750:10;1730:11;:31::i;:::-;1776:46;1792:6;1800:9;1811:10;1776:15;:46::i;:::-;1846:10;1837:19;;1424:444;;1333:535;1184:691;;;:::o;4945:231:12:-;5061:7;5117:1;5112;:6;;5120:12;5104:29;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5158:1;5154;:5;5147:12;;4945:231;;;;;:::o;2741:96::-;2799:7;2829:1;2825;:5;;;;:::i;:::-;2818:12;;2741:96;;;;:::o;675:102:2:-;717:4;763:5;;;;;;;;;;;741:28;;:10;:28;;;734:35;;675:102;:::o;7194:308:8:-;7289:1;7270:21;;:7;:21;;;;7262:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;7355:24;7372:6;7355:12;;:16;;:24;;;;:::i;:::-;7340:12;:39;;;;7411:30;7434:6;7411:9;:18;7421:7;7411:18;;;;;;;;;;;;;;;;:22;;:30;;;;:::i;:::-;7390:9;:18;7400:7;7390:18;;;;;;;;;;;;;;;:51;;;;7478:7;7457:37;;7474:1;7457:37;;;7487:6;7457:37;;;;;;:::i;:::-;;;;;;;;7194:308;;:::o;2270:187:9:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;7834:400:8:-;662:42;7910:23;;:7;:23;;;;7902:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;8005:68;8028:6;8005:68;;;;;;;;;;;;;;;;;:9;:18;8015:7;8005:18;;;;;;;;;;;;;;;;:22;;:68;;;;;:::i;:::-;7984:9;:18;7994:7;7984:18;;;;;;;;;;;;;;;:89;;;;8099:24;8116:6;8099:12;;:16;;:24;;;;:::i;:::-;8084:12;:39;;;;8148:23;8164:6;8148:11;;:15;;:23;;;;:::i;:::-;8134:11;:37;;;;662:42;8187:39;;8196:7;8187:39;;;8219:6;8187:39;;;;;;:::i;:::-;;;;;;;;7834:400;;:::o;6286:513::-;6444:1;6426:20;;:6;:20;;;;6418:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;6528:1;6507:23;;:9;:23;;;;6499:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;6603;6625:6;6603:71;;;;;;;;;;;;;;;;;:9;:17;6613:6;6603:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;6583:9;:17;6593:6;6583:17;;;;;;;;;;;;;;;:91;;;;6708:32;6733:6;6708:9;:20;6718:9;6708:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;6685:9;:20;6695:9;6685:20;;;;;;;;;;;;;;;:55;;;;6773:9;6756:35;;6765:6;6756:35;;;6784:6;6756:35;;;;;;:::i;:::-;;;;;;;;6286:513;;;:::o;3108:96:12:-;3166:7;3196:1;3192;:5;;;;:::i;:::-;3185:12;;3108:96;;;;:::o;7:139:13:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:119;;;411:79;;:::i;:::-;373:119;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;297:329;;;;:::o;632:474::-;700:6;708;757:2;745:9;736:7;732:23;728:32;725:119;;;763:79;;:::i;:::-;725:119;883:1;908:53;953:7;944:6;933:9;929:22;908:53;:::i;:::-;898:63;;854:117;1010:2;1036:53;1081:7;1072:6;1061:9;1057:22;1036:53;:::i;:::-;1026:63;;981:118;632:474;;;;;:::o;1112:619::-;1189:6;1197;1205;1254:2;1242:9;1233:7;1229:23;1225:32;1222:119;;;1260:79;;:::i;:::-;1222:119;1380:1;1405:53;1450:7;1441:6;1430:9;1426:22;1405:53;:::i;:::-;1395:63;;1351:117;1507:2;1533:53;1578:7;1569:6;1558:9;1554:22;1533:53;:::i;:::-;1523:63;;1478:118;1635:2;1661:53;1706:7;1697:6;1686:9;1682:22;1661:53;:::i;:::-;1651:63;;1606:118;1112:619;;;;;:::o;1737:474::-;1805:6;1813;1862:2;1850:9;1841:7;1837:23;1833:32;1830:119;;;1868:79;;:::i;:::-;1830:119;1988:1;2013:53;2058:7;2049:6;2038:9;2034:22;2013:53;:::i;:::-;2003:63;;1959:117;2115:2;2141:53;2186:7;2177:6;2166:9;2162:22;2141:53;:::i;:::-;2131:63;;2086:118;1737:474;;;;;:::o;2217:118::-;2304:24;2322:5;2304:24;:::i;:::-;2299:3;2292:37;2217:118;;:::o;2341:109::-;2422:21;2437:5;2422:21;:::i;:::-;2417:3;2410:34;2341:109;;:::o;2456:364::-;2544:3;2572:39;2605:5;2572:39;:::i;:::-;2627:71;2691:6;2686:3;2627:71;:::i;:::-;2620:78;;2707:52;2752:6;2747:3;2740:4;2733:5;2729:16;2707:52;:::i;:::-;2784:29;2806:6;2784:29;:::i;:::-;2779:3;2775:39;2768:46;;2548:272;2456:364;;;;:::o;2826:366::-;2968:3;2989:67;3053:2;3048:3;2989:67;:::i;:::-;2982:74;;3065:93;3154:3;3065:93;:::i;:::-;3183:2;3178:3;3174:12;3167:19;;2826:366;;;:::o;3198:::-;3340:3;3361:67;3425:2;3420:3;3361:67;:::i;:::-;3354:74;;3437:93;3526:3;3437:93;:::i;:::-;3555:2;3550:3;3546:12;3539:19;;3198:366;;;:::o;3570:::-;3712:3;3733:67;3797:2;3792:3;3733:67;:::i;:::-;3726:74;;3809:93;3898:3;3809:93;:::i;:::-;3927:2;3922:3;3918:12;3911:19;;3570:366;;;:::o;3942:::-;4084:3;4105:67;4169:2;4164:3;4105:67;:::i;:::-;4098:74;;4181:93;4270:3;4181:93;:::i;:::-;4299:2;4294:3;4290:12;4283:19;;3942:366;;;:::o;4314:::-;4456:3;4477:67;4541:2;4536:3;4477:67;:::i;:::-;4470:74;;4553:93;4642:3;4553:93;:::i;:::-;4671:2;4666:3;4662:12;4655:19;;4314:366;;;:::o;4686:::-;4828:3;4849:67;4913:2;4908:3;4849:67;:::i;:::-;4842:74;;4925:93;5014:3;4925:93;:::i;:::-;5043:2;5038:3;5034:12;5027:19;;4686:366;;;:::o;5058:365::-;5200:3;5221:66;5285:1;5280:3;5221:66;:::i;:::-;5214:73;;5296:93;5385:3;5296:93;:::i;:::-;5414:2;5409:3;5405:12;5398:19;;5058:365;;;:::o;5429:366::-;5571:3;5592:67;5656:2;5651:3;5592:67;:::i;:::-;5585:74;;5668:93;5757:3;5668:93;:::i;:::-;5786:2;5781:3;5777:12;5770:19;;5429:366;;;:::o;5801:::-;5943:3;5964:67;6028:2;6023:3;5964:67;:::i;:::-;5957:74;;6040:93;6129:3;6040:93;:::i;:::-;6158:2;6153:3;6149:12;6142:19;;5801:366;;;:::o;6173:::-;6315:3;6336:67;6400:2;6395:3;6336:67;:::i;:::-;6329:74;;6412:93;6501:3;6412:93;:::i;:::-;6530:2;6525:3;6521:12;6514:19;;6173:366;;;:::o;6545:::-;6687:3;6708:67;6772:2;6767:3;6708:67;:::i;:::-;6701:74;;6784:93;6873:3;6784:93;:::i;:::-;6902:2;6897:3;6893:12;6886:19;;6545:366;;;:::o;6917:118::-;7004:24;7022:5;7004:24;:::i;:::-;6999:3;6992:37;6917:118;;:::o;7041:112::-;7124:22;7140:5;7124:22;:::i;:::-;7119:3;7112:35;7041:112;;:::o;7159:222::-;7252:4;7290:2;7279:9;7275:18;7267:26;;7303:71;7371:1;7360:9;7356:17;7347:6;7303:71;:::i;:::-;7159:222;;;;:::o;7387:210::-;7474:4;7512:2;7501:9;7497:18;7489:26;;7525:65;7587:1;7576:9;7572:17;7563:6;7525:65;:::i;:::-;7387:210;;;;:::o;7603:313::-;7716:4;7754:2;7743:9;7739:18;7731:26;;7803:9;7797:4;7793:20;7789:1;7778:9;7774:17;7767:47;7831:78;7904:4;7895:6;7831:78;:::i;:::-;7823:86;;7603:313;;;;:::o;7922:419::-;8088:4;8126:2;8115:9;8111:18;8103:26;;8175:9;8169:4;8165:20;8161:1;8150:9;8146:17;8139:47;8203:131;8329:4;8203:131;:::i;:::-;8195:139;;7922:419;;;:::o;8347:::-;8513:4;8551:2;8540:9;8536:18;8528:26;;8600:9;8594:4;8590:20;8586:1;8575:9;8571:17;8564:47;8628:131;8754:4;8628:131;:::i;:::-;8620:139;;8347:419;;;:::o;8772:::-;8938:4;8976:2;8965:9;8961:18;8953:26;;9025:9;9019:4;9015:20;9011:1;9000:9;8996:17;8989:47;9053:131;9179:4;9053:131;:::i;:::-;9045:139;;8772:419;;;:::o;9197:::-;9363:4;9401:2;9390:9;9386:18;9378:26;;9450:9;9444:4;9440:20;9436:1;9425:9;9421:17;9414:47;9478:131;9604:4;9478:131;:::i;:::-;9470:139;;9197:419;;;:::o;9622:::-;9788:4;9826:2;9815:9;9811:18;9803:26;;9875:9;9869:4;9865:20;9861:1;9850:9;9846:17;9839:47;9903:131;10029:4;9903:131;:::i;:::-;9895:139;;9622:419;;;:::o;10047:::-;10213:4;10251:2;10240:9;10236:18;10228:26;;10300:9;10294:4;10290:20;10286:1;10275:9;10271:17;10264:47;10328:131;10454:4;10328:131;:::i;:::-;10320:139;;10047:419;;;:::o;10472:::-;10638:4;10676:2;10665:9;10661:18;10653:26;;10725:9;10719:4;10715:20;10711:1;10700:9;10696:17;10689:47;10753:131;10879:4;10753:131;:::i;:::-;10745:139;;10472:419;;;:::o;10897:::-;11063:4;11101:2;11090:9;11086:18;11078:26;;11150:9;11144:4;11140:20;11136:1;11125:9;11121:17;11114:47;11178:131;11304:4;11178:131;:::i;:::-;11170:139;;10897:419;;;:::o;11322:::-;11488:4;11526:2;11515:9;11511:18;11503:26;;11575:9;11569:4;11565:20;11561:1;11550:9;11546:17;11539:47;11603:131;11729:4;11603:131;:::i;:::-;11595:139;;11322:419;;;:::o;11747:::-;11913:4;11951:2;11940:9;11936:18;11928:26;;12000:9;11994:4;11990:20;11986:1;11975:9;11971:17;11964:47;12028:131;12154:4;12028:131;:::i;:::-;12020:139;;11747:419;;;:::o;12172:::-;12338:4;12376:2;12365:9;12361:18;12353:26;;12425:9;12419:4;12415:20;12411:1;12400:9;12396:17;12389:47;12453:131;12579:4;12453:131;:::i;:::-;12445:139;;12172:419;;;:::o;12597:222::-;12690:4;12728:2;12717:9;12713:18;12705:26;;12741:71;12809:1;12798:9;12794:17;12785:6;12741:71;:::i;:::-;12597:222;;;;:::o;12825:214::-;12914:4;12952:2;12941:9;12937:18;12929:26;;12965:67;13029:1;13018:9;13014:17;13005:6;12965:67;:::i;:::-;12825:214;;;;:::o;13126:99::-;13178:6;13212:5;13206:12;13196:22;;13126:99;;;:::o;13231:169::-;13315:11;13349:6;13344:3;13337:19;13389:4;13384:3;13380:14;13365:29;;13231:169;;;;:::o;13406:305::-;13446:3;13465:20;13483:1;13465:20;:::i;:::-;13460:25;;13499:20;13517:1;13499:20;:::i;:::-;13494:25;;13653:1;13585:66;13581:74;13578:1;13575:81;13572:107;;;13659:18;;:::i;:::-;13572:107;13703:1;13700;13696:9;13689:16;;13406:305;;;;:::o;13717:185::-;13757:1;13774:20;13792:1;13774:20;:::i;:::-;13769:25;;13808:20;13826:1;13808:20;:::i;:::-;13803:25;;13847:1;13837:35;;13852:18;;:::i;:::-;13837:35;13894:1;13891;13887:9;13882:14;;13717:185;;;;:::o;13908:348::-;13948:7;13971:20;13989:1;13971:20;:::i;:::-;13966:25;;14005:20;14023:1;14005:20;:::i;:::-;14000:25;;14193:1;14125:66;14121:74;14118:1;14115:81;14110:1;14103:9;14096:17;14092:105;14089:131;;;14200:18;;:::i;:::-;14089:131;14248:1;14245;14241:9;14230:20;;13908:348;;;;:::o;14262:191::-;14302:4;14322:20;14340:1;14322:20;:::i;:::-;14317:25;;14356:20;14374:1;14356:20;:::i;:::-;14351:25;;14395:1;14392;14389:8;14386:34;;;14400:18;;:::i;:::-;14386:34;14445:1;14442;14438:9;14430:17;;14262:191;;;;:::o;14459:96::-;14496:7;14525:24;14543:5;14525:24;:::i;:::-;14514:35;;14459:96;;;:::o;14561:90::-;14595:7;14638:5;14631:13;14624:21;14613:32;;14561:90;;;:::o;14657:126::-;14694:7;14734:42;14727:5;14723:54;14712:65;;14657:126;;;:::o;14789:77::-;14826:7;14855:5;14844:16;;14789:77;;;:::o;14872:86::-;14907:7;14947:4;14940:5;14936:16;14925:27;;14872:86;;;:::o;14964:307::-;15032:1;15042:113;15056:6;15053:1;15050:13;15042:113;;;15141:1;15136:3;15132:11;15126:18;15122:1;15117:3;15113:11;15106:39;15078:2;15075:1;15071:10;15066:15;;15042:113;;;15173:6;15170:1;15167:13;15164:101;;;15253:1;15244:6;15239:3;15235:16;15228:27;15164:101;15013:258;14964:307;;;:::o;15277:320::-;15321:6;15358:1;15352:4;15348:12;15338:22;;15405:1;15399:4;15395:12;15426:18;15416:81;;15482:4;15474:6;15470:17;15460:27;;15416:81;15544:2;15536:6;15533:14;15513:18;15510:38;15507:84;;;15563:18;;:::i;:::-;15507:84;15328:269;15277:320;;;:::o;15603:180::-;15651:77;15648:1;15641:88;15748:4;15745:1;15738:15;15772:4;15769:1;15762:15;15789:180;15837:77;15834:1;15827:88;15934:4;15931:1;15924:15;15958:4;15955:1;15948:15;15975:180;16023:77;16020:1;16013:88;16120:4;16117:1;16110:15;16144:4;16141:1;16134:15;16284:117;16393:1;16390;16383:12;16407:102;16448:6;16499:2;16495:7;16490:2;16483:5;16479:14;16475:28;16465:38;;16407:102;;;:::o;16515:224::-;16655:34;16651:1;16643:6;16639:14;16632:58;16724:7;16719:2;16711:6;16707:15;16700:32;16515:224;:::o;16745:223::-;16885:34;16881:1;16873:6;16869:14;16862:58;16954:6;16949:2;16941:6;16937:15;16930:31;16745:223;:::o;16974:225::-;17114:34;17110:1;17102:6;17098:14;17091:58;17183:8;17178:2;17170:6;17166:15;17159:33;16974:225;:::o;17205:221::-;17345:34;17341:1;17333:6;17329:14;17322:58;17414:4;17409:2;17401:6;17397:15;17390:29;17205:221;:::o;17432:181::-;17572:33;17568:1;17560:6;17556:14;17549:57;17432:181;:::o;17619:182::-;17759:34;17755:1;17747:6;17743:14;17736:58;17619:182;:::o;17807:158::-;17947:10;17943:1;17935:6;17931:14;17924:34;17807:158;:::o;17971:222::-;18111:34;18107:1;18099:6;18095:14;18088:58;18180:5;18175:2;18167:6;18163:15;18156:30;17971:222;:::o;18199:220::-;18339:34;18335:1;18327:6;18323:14;18316:58;18408:3;18403:2;18395:6;18391:15;18384:28;18199:220;:::o;18425:182::-;18565:34;18561:1;18553:6;18549:14;18542:58;18425:182;:::o;18613:221::-;18753:34;18749:1;18741:6;18737:14;18730:58;18822:4;18817:2;18809:6;18805:15;18798:29;18613:221;:::o;18840:122::-;18913:24;18931:5;18913:24;:::i;:::-;18906:5;18903:35;18893:63;;18952:1;18949;18942:12;18893:63;18840:122;:::o;18968:::-;19041:24;19059:5;19041:24;:::i;:::-;19034:5;19031:35;19021:63;;19080:1;19077;19070:12;19021:63;18968:122;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.7;\r\n\r\nimport \"./libs/ShibaBEP20.sol\";\r\n\r\ncontract NovaToken is ShibaBEP20(\"ShibaNOVA \", \"NOVA\") {\r\n\r\n    address public sNova;\r\n\r\n    /*\r\n     * @dev Throws if called by any account other than the owner or sNova\r\n     */\r\n    modifier onlyOwnerOrSNova() {\r\n        require(isOwner() || isSNova(), \"caller is not the owner or sNova\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the caller is the current owner.\r\n     */\r\n    function isOwner() public view returns (bool) {\r\n        return msg.sender == owner();\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the caller is sNova contracts.\r\n     */\r\n    function isSNova() internal view returns (bool) {\r\n        return msg.sender == address(sNova);\r\n    }\r\n\r\n    function setupSNova(address _sNova) external onlyOwner{\r\n        sNova = _sNova;\r\n    }\r\n\r\n    /// @notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterShiba).\r\n    function mint(address _to, uint256 _amount) external virtual override onlyOwnerOrSNova  {\r\n        _mint(_to, _amount);\r\n    }\r\n\r\n\r\n    /// @dev overrides transfer function to meet tokenomics of Nova\r\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual override {\r\n        require(amount > 0, \"amount 0\");\r\n        if (recipient == BURN_ADDRESS) {\r\n            super._burn(sender, amount);\r\n        } else {\r\n            // 2% of every transfer burnt\r\n            uint256 burnAmount = amount*2/100;\r\n            // 98% of transfer sent to recipient\r\n            uint256 sendAmount = amount-burnAmount;\r\n            require(amount == sendAmount + burnAmount, \"Nova::transfer: Burn value invalid\");\r\n\r\n            super._burn(sender, burnAmount);\r\n            super._transfer(sender, recipient, sendAmount);\r\n            amount = sendAmount;\r\n        }\r\n    }\r\n\r\n}",
  "sourcePath": "D:/Novaria/contracts/NovaToken.sol",
  "ast": {
    "absolutePath": "/D/Novaria/contracts/NovaToken.sol",
    "exportedSymbols": {
      "Address": [
        3700
      ],
      "Context": [
        3722
      ],
      "IBEP20": [
        2542
      ],
      "NovaToken": [
        1264
      ],
      "Ownable": [
        3403
      ],
      "SafeMath": [
        4034
      ],
      "ShibaBEP20": [
        3298
      ]
    },
    "id": 1265,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1112,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:2"
      },
      {
        "absolutePath": "/D/Novaria/contracts/libs/ShibaBEP20.sol",
        "file": "./libs/ShibaBEP20.sol",
        "id": 1113,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1265,
        "sourceUnit": 3299,
        "src": "62:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "53686962614e4f564120",
                "id": 1115,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "130:12:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_4b54363f53ee3b97f1de5ff7f850e64fa7d038bf1d632b8a1bf10280f7ea0595",
                  "typeString": "literal_string \"ShibaNOVA \""
                },
                "value": "ShibaNOVA "
              },
              {
                "hexValue": "4e4f5641",
                "id": 1116,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "144:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_6c815368d22c13cd70e1de11ebe86229e240e018e6583c59946d468748640306",
                  "typeString": "literal_string \"NOVA\""
                },
                "value": "NOVA"
              }
            ],
            "baseName": {
              "id": 1114,
              "name": "ShibaBEP20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3298,
              "src": "119:10:2"
            },
            "id": 1117,
            "nodeType": "InheritanceSpecifier",
            "src": "119:32:2"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1264,
        "linearizedBaseContracts": [
          1264,
          3298,
          3403,
          2542,
          3722
        ],
        "name": "NovaToken",
        "nameLocation": "106:9:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "2ce39db1",
            "id": 1119,
            "mutability": "mutable",
            "name": "sNova",
            "nameLocation": "176:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 1264,
            "src": "161:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1118,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "161:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1131,
              "nodeType": "Block",
              "src": "310:98:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1122,
                            "name": "isOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1145,
                            "src": "329:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 1123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "329:9:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1124,
                            "name": "isSNova",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1160,
                            "src": "342:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 1125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "342:9:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "329:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206973206e6f7420746865206f776e6572206f7220734e6f7661",
                        "id": 1127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "353:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5583e28ebcff72a8cebca023463673e9f156021121ebb50cf259c52a58a6e87",
                          "typeString": "literal_string \"caller is not the owner or sNova\""
                        },
                        "value": "caller is not the owner or sNova"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5583e28ebcff72a8cebca023463673e9f156021121ebb50cf259c52a58a6e87",
                          "typeString": "literal_string \"caller is not the owner or sNova\""
                        }
                      ],
                      "id": 1121,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "321:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "321:67:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1129,
                  "nodeType": "ExpressionStatement",
                  "src": "321:67:2"
                },
                {
                  "id": 1130,
                  "nodeType": "PlaceholderStatement",
                  "src": "399:1:2"
                }
              ]
            },
            "id": 1132,
            "name": "onlyOwnerOrSNova",
            "nameLocation": "291:16:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "307:2:2"
            },
            "src": "282:126:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1144,
              "nodeType": "Block",
              "src": "542:47:2",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1138,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "560:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "560:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1140,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3331,
                        "src": "574:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 1141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "574:7:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "560:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1137,
                  "id": 1143,
                  "nodeType": "Return",
                  "src": "553:28:2"
                }
              ]
            },
            "documentation": {
              "id": 1133,
              "nodeType": "StructuredDocumentation",
              "src": "416:74:2",
              "text": " @dev Returns true if the caller is the current owner."
            },
            "functionSelector": "8f32d59b",
            "id": 1145,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOwner",
            "nameLocation": "505:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "512:2:2"
            },
            "returnParameters": {
              "id": 1137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1136,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1145,
                  "src": "536:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1135,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "536:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "535:6:2"
            },
            "scope": 1264,
            "src": "496:93:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1159,
              "nodeType": "Block",
              "src": "723:54:2",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1151,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "741:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "741:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 1155,
                          "name": "sNova",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1119,
                          "src": "763:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "755:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1153,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "755:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "755:14:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "741:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1150,
                  "id": 1158,
                  "nodeType": "Return",
                  "src": "734:35:2"
                }
              ]
            },
            "documentation": {
              "id": 1146,
              "nodeType": "StructuredDocumentation",
              "src": "597:72:2",
              "text": " @dev Returns true if the caller is sNova contracts."
            },
            "id": 1160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isSNova",
            "nameLocation": "684:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "691:2:2"
            },
            "returnParameters": {
              "id": 1150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1149,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1160,
                  "src": "717:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1148,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "717:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "716:6:2"
            },
            "scope": 1264,
            "src": "675:102:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1171,
              "nodeType": "Block",
              "src": "839:33:2",
              "statements": [
                {
                  "expression": {
                    "id": 1169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1167,
                      "name": "sNova",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1119,
                      "src": "850:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1168,
                      "name": "_sNova",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1162,
                      "src": "858:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "850:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1170,
                  "nodeType": "ExpressionStatement",
                  "src": "850:14:2"
                }
              ]
            },
            "functionSelector": "9dfd5f05",
            "id": 1172,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1165,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1164,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3345,
                  "src": "830:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "830:9:2"
              }
            ],
            "name": "setupSNova",
            "nameLocation": "794:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1162,
                  "mutability": "mutable",
                  "name": "_sNova",
                  "nameLocation": "813:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1172,
                  "src": "805:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1161,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "805:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "804:16:2"
            },
            "returnParameters": {
              "id": 1166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "839:0:2"
            },
            "scope": 1264,
            "src": "785:87:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3128
            ],
            "body": {
              "id": 1188,
              "nodeType": "Block",
              "src": "1067:38:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1184,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1175,
                        "src": "1084:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1185,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1177,
                        "src": "1089:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1183,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3174,
                      "src": "1078:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1078:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1187,
                  "nodeType": "ExpressionStatement",
                  "src": "1078:19:2"
                }
              ]
            },
            "documentation": {
              "id": 1173,
              "nodeType": "StructuredDocumentation",
              "src": "880:93:2",
              "text": "@notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterShiba)."
            },
            "functionSelector": "40c10f19",
            "id": 1189,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1181,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1180,
                  "name": "onlyOwnerOrSNova",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1132,
                  "src": "1049:16:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1049:16:2"
              }
            ],
            "name": "mint",
            "nameLocation": "988:4:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1179,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1040:8:2"
            },
            "parameters": {
              "id": 1178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1175,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1001:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "993:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1174,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "993:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1177,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1014:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "1006:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "992:30:2"
            },
            "returnParameters": {
              "id": 1182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1067:0:2"
            },
            "scope": 1264,
            "src": "979:126:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3113
            ],
            "body": {
              "id": 1262,
              "nodeType": "Block",
              "src": "1280:595:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1201,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1196,
                          "src": "1299:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1308:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1299:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e742030",
                        "id": 1204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1311:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa0c75600cc81ac69d9358030c40cab76c7291229be6a13e3d364c52d7ae813b",
                          "typeString": "literal_string \"amount 0\""
                        },
                        "value": "amount 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa0c75600cc81ac69d9358030c40cab76c7291229be6a13e3d364c52d7ae813b",
                          "typeString": "literal_string \"amount 0\""
                        }
                      ],
                      "id": 1200,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1291:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1291:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1206,
                  "nodeType": "ExpressionStatement",
                  "src": "1291:31:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1207,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1194,
                      "src": "1337:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1208,
                      "name": "BURN_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2783,
                      "src": "1350:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1337:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1260,
                    "nodeType": "Block",
                    "src": "1424:444:2",
                    "statements": [
                      {
                        "assignments": [
                          1219
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1219,
                            "mutability": "mutable",
                            "name": "burnAmount",
                            "nameLocation": "1490:10:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1260,
                            "src": "1482:18:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1218,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1482:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1225,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1220,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1196,
                              "src": "1503:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 1221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1510:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "1503:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1512:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "1503:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1482:33:2"
                      },
                      {
                        "assignments": [
                          1227
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1227,
                            "mutability": "mutable",
                            "name": "sendAmount",
                            "nameLocation": "1588:10:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1260,
                            "src": "1580:18:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1226,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1580:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1231,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1228,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1196,
                            "src": "1601:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1229,
                            "name": "burnAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1219,
                            "src": "1608:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1601:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1580:38:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1233,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1196,
                                "src": "1641:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1236,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1234,
                                  "name": "sendAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1227,
                                  "src": "1651:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 1235,
                                  "name": "burnAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1219,
                                  "src": "1664:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1651:23:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1641:33:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f76613a3a7472616e736665723a204275726e2076616c756520696e76616c6964",
                              "id": 1238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1676:36:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5fe528bdccd3636f08bf3818ed6bb8ffc861cbc53939150f5c6fcaf21e8516f9",
                                "typeString": "literal_string \"Nova::transfer: Burn value invalid\""
                              },
                              "value": "Nova::transfer: Burn value invalid"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5fe528bdccd3636f08bf3818ed6bb8ffc861cbc53939150f5c6fcaf21e8516f9",
                                "typeString": "literal_string \"Nova::transfer: Burn value invalid\""
                              }
                            ],
                            "id": 1232,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1633:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1633:80:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1240,
                        "nodeType": "ExpressionStatement",
                        "src": "1633:80:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1244,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1192,
                              "src": "1742:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1245,
                              "name": "burnAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1219,
                              "src": "1750:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1241,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "1730:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_NovaToken_$1264_$",
                                "typeString": "type(contract super NovaToken)"
                              }
                            },
                            "id": 1243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3222,
                            "src": "1730:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1730:31:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1247,
                        "nodeType": "ExpressionStatement",
                        "src": "1730:31:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1251,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1192,
                              "src": "1792:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1252,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1194,
                              "src": "1800:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1253,
                              "name": "sendAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1227,
                              "src": "1811:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1248,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "1776:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_NovaToken_$1264_$",
                                "typeString": "type(contract super NovaToken)"
                              }
                            },
                            "id": 1250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3113,
                            "src": "1776:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1776:46:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1255,
                        "nodeType": "ExpressionStatement",
                        "src": "1776:46:2"
                      },
                      {
                        "expression": {
                          "id": 1258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1256,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1196,
                            "src": "1837:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1257,
                            "name": "sendAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1227,
                            "src": "1846:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1837:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1259,
                        "nodeType": "ExpressionStatement",
                        "src": "1837:19:2"
                      }
                    ]
                  },
                  "id": 1261,
                  "nodeType": "IfStatement",
                  "src": "1333:535:2",
                  "trueBody": {
                    "id": 1217,
                    "nodeType": "Block",
                    "src": "1364:54:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1213,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1192,
                              "src": "1391:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1214,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1196,
                              "src": "1399:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1210,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "1379:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_NovaToken_$1264_$",
                                "typeString": "type(contract super NovaToken)"
                              }
                            },
                            "id": 1212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3222,
                            "src": "1379:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1379:27:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1216,
                        "nodeType": "ExpressionStatement",
                        "src": "1379:27:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1190,
              "nodeType": "StructuredDocumentation",
              "src": "1115:63:2",
              "text": "@dev overrides transfer function to meet tokenomics of Nova"
            },
            "id": 1263,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "1193:9:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1198,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1271:8:2"
            },
            "parameters": {
              "id": 1197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1192,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1211:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1263,
                  "src": "1203:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1191,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1203:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1194,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1227:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1263,
                  "src": "1219:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1219:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1196,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1246:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1263,
                  "src": "1238:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1202:51:2"
            },
            "returnParameters": {
              "id": 1199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1280:0:2"
            },
            "scope": 1264,
            "src": "1184:691:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1265,
        "src": "97:1783:2",
        "usedErrors": []
      }
    ],
    "src": "35:1845:2"
  },
  "legacyAST": {
    "absolutePath": "/D/Novaria/contracts/NovaToken.sol",
    "exportedSymbols": {
      "Address": [
        3700
      ],
      "Context": [
        3722
      ],
      "IBEP20": [
        2542
      ],
      "NovaToken": [
        1264
      ],
      "Ownable": [
        3403
      ],
      "SafeMath": [
        4034
      ],
      "ShibaBEP20": [
        3298
      ]
    },
    "id": 1265,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1112,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:2"
      },
      {
        "absolutePath": "/D/Novaria/contracts/libs/ShibaBEP20.sol",
        "file": "./libs/ShibaBEP20.sol",
        "id": 1113,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1265,
        "sourceUnit": 3299,
        "src": "62:31:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "hexValue": "53686962614e4f564120",
                "id": 1115,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "130:12:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_4b54363f53ee3b97f1de5ff7f850e64fa7d038bf1d632b8a1bf10280f7ea0595",
                  "typeString": "literal_string \"ShibaNOVA \""
                },
                "value": "ShibaNOVA "
              },
              {
                "hexValue": "4e4f5641",
                "id": 1116,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "string",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "144:6:2",
                "typeDescriptions": {
                  "typeIdentifier": "t_stringliteral_6c815368d22c13cd70e1de11ebe86229e240e018e6583c59946d468748640306",
                  "typeString": "literal_string \"NOVA\""
                },
                "value": "NOVA"
              }
            ],
            "baseName": {
              "id": 1114,
              "name": "ShibaBEP20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3298,
              "src": "119:10:2"
            },
            "id": 1117,
            "nodeType": "InheritanceSpecifier",
            "src": "119:32:2"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1264,
        "linearizedBaseContracts": [
          1264,
          3298,
          3403,
          2542,
          3722
        ],
        "name": "NovaToken",
        "nameLocation": "106:9:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "2ce39db1",
            "id": 1119,
            "mutability": "mutable",
            "name": "sNova",
            "nameLocation": "176:5:2",
            "nodeType": "VariableDeclaration",
            "scope": 1264,
            "src": "161:20:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1118,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "161:7:2",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1131,
              "nodeType": "Block",
              "src": "310:98:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1122,
                            "name": "isOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1145,
                            "src": "329:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 1123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "329:9:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1124,
                            "name": "isSNova",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1160,
                            "src": "342:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 1125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "342:9:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "329:22:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206973206e6f7420746865206f776e6572206f7220734e6f7661",
                        "id": 1127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "353:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5583e28ebcff72a8cebca023463673e9f156021121ebb50cf259c52a58a6e87",
                          "typeString": "literal_string \"caller is not the owner or sNova\""
                        },
                        "value": "caller is not the owner or sNova"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5583e28ebcff72a8cebca023463673e9f156021121ebb50cf259c52a58a6e87",
                          "typeString": "literal_string \"caller is not the owner or sNova\""
                        }
                      ],
                      "id": 1121,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "321:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "321:67:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1129,
                  "nodeType": "ExpressionStatement",
                  "src": "321:67:2"
                },
                {
                  "id": 1130,
                  "nodeType": "PlaceholderStatement",
                  "src": "399:1:2"
                }
              ]
            },
            "id": 1132,
            "name": "onlyOwnerOrSNova",
            "nameLocation": "291:16:2",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "307:2:2"
            },
            "src": "282:126:2",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1144,
              "nodeType": "Block",
              "src": "542:47:2",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1142,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1138,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "560:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "560:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 1140,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3331,
                        "src": "574:5:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                          "typeString": "function () view returns (address)"
                        }
                      },
                      "id": 1141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "574:7:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "560:21:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1137,
                  "id": 1143,
                  "nodeType": "Return",
                  "src": "553:28:2"
                }
              ]
            },
            "documentation": {
              "id": 1133,
              "nodeType": "StructuredDocumentation",
              "src": "416:74:2",
              "text": " @dev Returns true if the caller is the current owner."
            },
            "functionSelector": "8f32d59b",
            "id": 1145,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOwner",
            "nameLocation": "505:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "512:2:2"
            },
            "returnParameters": {
              "id": 1137,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1136,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1145,
                  "src": "536:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1135,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "536:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "535:6:2"
            },
            "scope": 1264,
            "src": "496:93:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1159,
              "nodeType": "Block",
              "src": "723:54:2",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1151,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "741:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "741:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 1155,
                          "name": "sNova",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1119,
                          "src": "763:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "755:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1153,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "755:7:2",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1156,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "755:14:2",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "741:28:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 1150,
                  "id": 1158,
                  "nodeType": "Return",
                  "src": "734:35:2"
                }
              ]
            },
            "documentation": {
              "id": 1146,
              "nodeType": "StructuredDocumentation",
              "src": "597:72:2",
              "text": " @dev Returns true if the caller is sNova contracts."
            },
            "id": 1160,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isSNova",
            "nameLocation": "684:7:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "691:2:2"
            },
            "returnParameters": {
              "id": 1150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1149,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1160,
                  "src": "717:4:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1148,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "717:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "716:6:2"
            },
            "scope": 1264,
            "src": "675:102:2",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1171,
              "nodeType": "Block",
              "src": "839:33:2",
              "statements": [
                {
                  "expression": {
                    "id": 1169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1167,
                      "name": "sNova",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1119,
                      "src": "850:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1168,
                      "name": "_sNova",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1162,
                      "src": "858:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "850:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1170,
                  "nodeType": "ExpressionStatement",
                  "src": "850:14:2"
                }
              ]
            },
            "functionSelector": "9dfd5f05",
            "id": 1172,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1165,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1164,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3345,
                  "src": "830:9:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "830:9:2"
              }
            ],
            "name": "setupSNova",
            "nameLocation": "794:10:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1163,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1162,
                  "mutability": "mutable",
                  "name": "_sNova",
                  "nameLocation": "813:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1172,
                  "src": "805:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1161,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "805:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "804:16:2"
            },
            "returnParameters": {
              "id": 1166,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "839:0:2"
            },
            "scope": 1264,
            "src": "785:87:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3128
            ],
            "body": {
              "id": 1188,
              "nodeType": "Block",
              "src": "1067:38:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1184,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1175,
                        "src": "1084:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1185,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1177,
                        "src": "1089:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1183,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3174,
                      "src": "1078:5:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1078:19:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1187,
                  "nodeType": "ExpressionStatement",
                  "src": "1078:19:2"
                }
              ]
            },
            "documentation": {
              "id": 1173,
              "nodeType": "StructuredDocumentation",
              "src": "880:93:2",
              "text": "@notice Creates `_amount` token to `_to`. Must only be called by the owner (MasterShiba)."
            },
            "functionSelector": "40c10f19",
            "id": 1189,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1181,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1180,
                  "name": "onlyOwnerOrSNova",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1132,
                  "src": "1049:16:2"
                },
                "nodeType": "ModifierInvocation",
                "src": "1049:16:2"
              }
            ],
            "name": "mint",
            "nameLocation": "988:4:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1179,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1040:8:2"
            },
            "parameters": {
              "id": 1178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1175,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1001:3:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "993:11:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1174,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "993:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1177,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1014:7:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "1006:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1006:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "992:30:2"
            },
            "returnParameters": {
              "id": 1182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1067:0:2"
            },
            "scope": 1264,
            "src": "979:126:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3113
            ],
            "body": {
              "id": 1262,
              "nodeType": "Block",
              "src": "1280:595:2",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1201,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1196,
                          "src": "1299:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1308:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1299:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e742030",
                        "id": 1204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1311:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa0c75600cc81ac69d9358030c40cab76c7291229be6a13e3d364c52d7ae813b",
                          "typeString": "literal_string \"amount 0\""
                        },
                        "value": "amount 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa0c75600cc81ac69d9358030c40cab76c7291229be6a13e3d364c52d7ae813b",
                          "typeString": "literal_string \"amount 0\""
                        }
                      ],
                      "id": 1200,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1291:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1291:31:2",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1206,
                  "nodeType": "ExpressionStatement",
                  "src": "1291:31:2"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1207,
                      "name": "recipient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1194,
                      "src": "1337:9:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1208,
                      "name": "BURN_ADDRESS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2783,
                      "src": "1350:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1337:25:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1260,
                    "nodeType": "Block",
                    "src": "1424:444:2",
                    "statements": [
                      {
                        "assignments": [
                          1219
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1219,
                            "mutability": "mutable",
                            "name": "burnAmount",
                            "nameLocation": "1490:10:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1260,
                            "src": "1482:18:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1218,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1482:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1225,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1220,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1196,
                              "src": "1503:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "32",
                              "id": 1221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1510:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            },
                            "src": "1503:8:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1512:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "1503:12:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1482:33:2"
                      },
                      {
                        "assignments": [
                          1227
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1227,
                            "mutability": "mutable",
                            "name": "sendAmount",
                            "nameLocation": "1588:10:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 1260,
                            "src": "1580:18:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1226,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "1580:7:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1231,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1228,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1196,
                            "src": "1601:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1229,
                            "name": "burnAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1219,
                            "src": "1608:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1601:17:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1580:38:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1233,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1196,
                                "src": "1641:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1236,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1234,
                                  "name": "sendAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1227,
                                  "src": "1651:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 1235,
                                  "name": "burnAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1219,
                                  "src": "1664:10:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1651:23:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1641:33:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f76613a3a7472616e736665723a204275726e2076616c756520696e76616c6964",
                              "id": 1238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1676:36:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5fe528bdccd3636f08bf3818ed6bb8ffc861cbc53939150f5c6fcaf21e8516f9",
                                "typeString": "literal_string \"Nova::transfer: Burn value invalid\""
                              },
                              "value": "Nova::transfer: Burn value invalid"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5fe528bdccd3636f08bf3818ed6bb8ffc861cbc53939150f5c6fcaf21e8516f9",
                                "typeString": "literal_string \"Nova::transfer: Burn value invalid\""
                              }
                            ],
                            "id": 1232,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "1633:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1633:80:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1240,
                        "nodeType": "ExpressionStatement",
                        "src": "1633:80:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1244,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1192,
                              "src": "1742:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1245,
                              "name": "burnAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1219,
                              "src": "1750:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1241,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "1730:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_NovaToken_$1264_$",
                                "typeString": "type(contract super NovaToken)"
                              }
                            },
                            "id": 1243,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3222,
                            "src": "1730:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1730:31:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1247,
                        "nodeType": "ExpressionStatement",
                        "src": "1730:31:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1251,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1192,
                              "src": "1792:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1252,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1194,
                              "src": "1800:9:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1253,
                              "name": "sendAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1227,
                              "src": "1811:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1248,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "1776:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_NovaToken_$1264_$",
                                "typeString": "type(contract super NovaToken)"
                              }
                            },
                            "id": 1250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3113,
                            "src": "1776:15:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1776:46:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1255,
                        "nodeType": "ExpressionStatement",
                        "src": "1776:46:2"
                      },
                      {
                        "expression": {
                          "id": 1258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1256,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1196,
                            "src": "1837:6:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1257,
                            "name": "sendAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1227,
                            "src": "1846:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1837:19:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1259,
                        "nodeType": "ExpressionStatement",
                        "src": "1837:19:2"
                      }
                    ]
                  },
                  "id": 1261,
                  "nodeType": "IfStatement",
                  "src": "1333:535:2",
                  "trueBody": {
                    "id": 1217,
                    "nodeType": "Block",
                    "src": "1364:54:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1213,
                              "name": "sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1192,
                              "src": "1391:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1214,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1196,
                              "src": "1399:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1210,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967271,
                              "src": "1379:5:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_NovaToken_$1264_$",
                                "typeString": "type(contract super NovaToken)"
                              }
                            },
                            "id": 1212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3222,
                            "src": "1379:11:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1379:27:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1216,
                        "nodeType": "ExpressionStatement",
                        "src": "1379:27:2"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1190,
              "nodeType": "StructuredDocumentation",
              "src": "1115:63:2",
              "text": "@dev overrides transfer function to meet tokenomics of Nova"
            },
            "id": 1263,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "1193:9:2",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1198,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1271:8:2"
            },
            "parameters": {
              "id": 1197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1192,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1211:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1263,
                  "src": "1203:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1191,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1203:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1194,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "1227:9:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1263,
                  "src": "1219:17:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1219:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1196,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1246:6:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 1263,
                  "src": "1238:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1202:51:2"
            },
            "returnParameters": {
              "id": 1199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1280:0:2"
            },
            "scope": 1264,
            "src": "1184:691:2",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 1265,
        "src": "97:1783:2",
        "usedErrors": []
      }
    ],
    "src": "35:1845:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-12-15T01:45:32.254Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {BEP20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {BEP20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {BEP20-balanceOf}."
      },
      "burnSupply()": {
        "details": "See {BEP20-totalSupply}."
      },
      "decimals()": {
        "details": "Returns the token decimals."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getOwner()": {
        "details": "Returns the bep token owner."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {BEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "name()": {
        "details": "Returns the token name."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the token symbol."
      },
      "totalSupply()": {
        "details": "See {BEP20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {BEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {BEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}; Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for `sender`'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "mint(address,uint256)": {
        "notice": "Creates `_amount` token to `_to`. Must only be called by the owner (MasterShiba)."
      }
    },
    "version": 1
  }
}